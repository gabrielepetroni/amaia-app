{
  "version": 3,
  "sources": ["../../../../../node_modules/@azure/core-auth/dist/browser/azureKeyCredential.js", "../../../../../node_modules/@azure/abort-controller/dist/browser/AbortError.js", "../../../../../node_modules/@azure/core-util/dist/browser/random.js", "../../../../../node_modules/@azure/core-util/dist/browser/object.js", "../../../../../node_modules/@azure/core-util/dist/browser/error.js", "../../../../../node_modules/@azure/core-util/dist/browser/bytesEncoding.js", "../../../../../node_modules/@azure/core-util/dist/browser/uuidUtils.common.js", "../../../../../node_modules/@azure/core-util/dist/browser/uuidUtils.js", "../../../../../node_modules/@azure/core-util/dist/browser/checkEnvironment.js", "../../../../../node_modules/@azure/core-auth/dist/browser/tokenCredential.js", "../../../../../node_modules/@azure/core-rest-pipeline/dist/browser/pipeline.js", "../../../../../node_modules/@azure/logger/dist/browser/log.js", "../../../../../node_modules/@azure/logger/dist/browser/debug.js", "../../../../../node_modules/@azure/logger/dist/browser/index.js", "../../../../../node_modules/@azure/core-rest-pipeline/dist/browser/log.js", "../../../../../node_modules/@azure/core-rest-pipeline/dist/browser/util/sanitizer.js", "../../../../../node_modules/@azure/core-rest-pipeline/dist/browser/policies/logPolicy.js", "../../../../../node_modules/@azure/core-rest-pipeline/dist/browser/policies/redirectPolicy.js", "../../../../../node_modules/@azure/core-rest-pipeline/dist/browser/util/userAgentPlatform.js", "../../../../../node_modules/@azure/core-rest-pipeline/dist/browser/constants.js", "../../../../../node_modules/@azure/core-rest-pipeline/dist/browser/util/userAgent.js", "../../../../../node_modules/@azure/core-rest-pipeline/dist/browser/policies/userAgentPolicy.js", "../../../../../node_modules/@azure/core-rest-pipeline/dist/browser/util/typeGuards.js", "../../../../../node_modules/@azure/core-rest-pipeline/dist/browser/util/file.js", "../../../../../node_modules/@azure/core-rest-pipeline/dist/browser/util/concat.js", "../../../../../node_modules/@azure/core-rest-pipeline/dist/browser/policies/multipartPolicy.js", "../../../../../node_modules/@azure/core-rest-pipeline/dist/browser/policies/decompressResponsePolicy.js", "../../../../../node_modules/@azure/core-rest-pipeline/dist/browser/util/helpers.js", "../../../../../node_modules/@azure/core-rest-pipeline/dist/browser/retryStrategies/throttlingRetryStrategy.js", "../../../../../node_modules/@azure/core-rest-pipeline/dist/browser/retryStrategies/exponentialRetryStrategy.js", "../../../../../node_modules/@azure/core-rest-pipeline/dist/browser/policies/retryPolicy.js", "../../../../../node_modules/@azure/core-rest-pipeline/dist/browser/policies/defaultRetryPolicy.js", "../../../../../node_modules/@azure/core-rest-pipeline/dist/browser/httpHeaders.js", "../../../../../node_modules/@azure/core-rest-pipeline/dist/browser/policies/formDataPolicy.js", "../../../../../node_modules/@azure/core-rest-pipeline/dist/browser/policies/proxyPolicy.js", "../../../../../node_modules/@azure/core-rest-pipeline/dist/browser/policies/setClientRequestIdPolicy.js", "../../../../../node_modules/@azure/core-rest-pipeline/dist/browser/policies/tlsPolicy.js", "../../../../../node_modules/@azure/core-tracing/dist/browser/tracingContext.js", "../../../../../node_modules/@azure/core-tracing/dist/browser/state.js", "../../../../../node_modules/@azure/core-tracing/dist/browser/instrumenter.js", "../../../../../node_modules/@azure/core-tracing/dist/browser/tracingClient.js", "../../../../../node_modules/@azure/core-rest-pipeline/dist/browser/util/inspect.js", "../../../../../node_modules/@azure/core-rest-pipeline/dist/browser/restError.js", "../../../../../node_modules/@azure/core-rest-pipeline/dist/browser/policies/tracingPolicy.js", "../../../../../node_modules/@azure/core-rest-pipeline/dist/browser/createPipelineFromOptions.js", "../../../../../node_modules/@azure/core-rest-pipeline/dist/browser/fetchHttpClient.js", "../../../../../node_modules/@azure/core-rest-pipeline/dist/browser/defaultHttpClient.js", "../../../../../node_modules/@azure/core-rest-pipeline/dist/browser/pipelineRequest.js", "../../../../../node_modules/@azure/core-rest-pipeline/dist/browser/util/tokenCycler.js", "../../../../../node_modules/@azure/core-rest-pipeline/dist/browser/policies/bearerTokenAuthenticationPolicy.js", "../../../../../node_modules/@azure-rest/core-client/dist/browser/apiVersionPolicy.js", "../../../../../node_modules/@azure-rest/core-client/dist/browser/keyCredentialAuthenticationPolicy.js", "../../../../../node_modules/@azure-rest/core-client/dist/browser/clientHelpers.js", "../../../../../node_modules/@azure-rest/core-client/dist/browser/operationOptionHelpers.js", "../../../../../node_modules/@azure-rest/core-client/dist/browser/helpers/isReadableStream.js", "../../../../../node_modules/@azure-rest/core-client/dist/browser/sendRequest.js", "../../../../../node_modules/@azure-rest/core-client/dist/browser/urlHelpers.js", "../../../../../node_modules/@azure-rest/core-client/dist/browser/getClient.js", "../../../../../node_modules/@azure/openai/dist-esm/src/logger.js", "../../../../../node_modules/@azure/openai/dist-esm/src/rest/openAIClient.js", "../../../../../node_modules/@azure/openai/dist-esm/src/rest/isUnexpected.js", "../../../../../node_modules/@azure/openai/dist-esm/src/rest/index.js", "../../../../../node_modules/@azure/openai/dist-esm/src/api/OpenAIContext.js", "../../../../../node_modules/@azure/openai/dist-esm/src/api/util.js", "../../../../../node_modules/@azure/openai/dist-esm/src/utils/serializeUtil.js", "../../../../../node_modules/@azure/openai/dist-esm/src/api/readableStreamUtils.js", "../../../../../node_modules/@azure/openai/dist-esm/src/api/getSSEs.browser.js", "../../../../../node_modules/@azure/core-sse/dist/browser/utils.js", "../../../../../node_modules/@azure/core-sse/dist/browser/sse.js", "../../../../../node_modules/@azure/openai/dist-esm/src/api/oaiSse.js", "../../../../../node_modules/@azure/openai/dist-esm/src/api/operations.js", "../../../../../node_modules/@azure/openai/dist-esm/src/api/policies/nonAzure.js", "../../../../../node_modules/@azure/openai/dist-esm/src/OpenAIClient.js", "../../../../../node_modules/@azure/openai/dist-esm/src/OpenAIKeyCredential.js"],
  "sourcesContent": ["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * A static-key-based credential that supports updating\n * the underlying key value.\n */\nexport class AzureKeyCredential {\n    /**\n     * The value of the key to be used in authentication\n     */\n    get key() {\n        return this._key;\n    }\n    /**\n     * Create an instance of an AzureKeyCredential for use\n     * with a service client.\n     *\n     * @param key - The initial value of the key to use in authentication\n     */\n    constructor(key) {\n        if (!key) {\n            throw new Error(\"key must be a non-empty string\");\n        }\n        this._key = key;\n    }\n    /**\n     * Change the value of the key.\n     *\n     * Updates will take effect upon the next request after\n     * updating the key value.\n     *\n     * @param newKey - The new key value to be used\n     */\n    update(newKey) {\n        this._key = newKey;\n    }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * This error is thrown when an asynchronous operation has been aborted.\n * Check for this error by testing the `name` that the name property of the\n * error matches `\"AbortError\"`.\n *\n * @example\n * ```ts\n * const controller = new AbortController();\n * controller.abort();\n * try {\n *   doAsyncWork(controller.signal)\n * } catch (e) {\n *   if (e.name === 'AbortError') {\n *     // handle abort error here.\n *   }\n * }\n * ```\n */\nexport class AbortError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"AbortError\";\n    }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Returns a random integer value between a lower and upper bound,\n * inclusive of both bounds.\n * Note that this uses Math.random and isn't secure. If you need to use\n * this for any kind of security purpose, find a better source of random.\n * @param min - The smallest integer value allowed.\n * @param max - The largest integer value allowed.\n */\nexport function getRandomIntegerInclusive(min, max) {\n    // Make sure inputs are integers.\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    // Pick a random offset from zero to the size of the range.\n    // Since Math.random() can never return 1, we have to make the range one larger\n    // in order to be inclusive of the maximum value after we take the floor.\n    const offset = Math.floor(Math.random() * (max - min + 1));\n    return offset + min;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Helper to determine when an input is a generic JS object.\n * @returns true when input is an object type that is not null, Array, RegExp, or Date.\n */\nexport function isObject(input) {\n    return (typeof input === \"object\" &&\n        input !== null &&\n        !Array.isArray(input) &&\n        !(input instanceof RegExp) &&\n        !(input instanceof Date));\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { isObject } from \"./object.js\";\n/**\n * Typeguard for an error object shape (has name and message)\n * @param e - Something caught by a catch clause.\n */\nexport function isError(e) {\n    if (isObject(e)) {\n        const hasName = typeof e.name === \"string\";\n        const hasMessage = typeof e.message === \"string\";\n        return hasName && hasMessage;\n    }\n    return false;\n}\n/**\n * Given what is thought to be an error object, return the message if possible.\n * If the message is missing, returns a stringified version of the input.\n * @param e - Something thrown from a try block\n * @returns The error message or a string of the input\n */\nexport function getErrorMessage(e) {\n    if (isError(e)) {\n        return e.message;\n    }\n    else {\n        let stringified;\n        try {\n            if (typeof e === \"object\" && e) {\n                stringified = JSON.stringify(e);\n            }\n            else {\n                stringified = String(e);\n            }\n        }\n        catch (err) {\n            stringified = \"[unable to stringify input]\";\n        }\n        return `Unknown error ${stringified}`;\n    }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * The helper that transforms bytes with specific character encoding into string\n * @param bytes - the uint8array bytes\n * @param format - the format we use to encode the byte\n * @returns a string of the encoded string\n */\nexport function uint8ArrayToString(bytes, format) {\n    switch (format) {\n        case \"utf-8\":\n            return uint8ArrayToUtf8String(bytes);\n        case \"base64\":\n            return uint8ArrayToBase64(bytes);\n        case \"base64url\":\n            return uint8ArrayToBase64Url(bytes);\n        case \"hex\":\n            return uint8ArrayToHexString(bytes);\n    }\n}\n/**\n * The helper that transforms string to specific character encoded bytes array.\n * @param value - the string to be converted\n * @param format - the format we use to decode the value\n * @returns a uint8array\n */\nexport function stringToUint8Array(value, format) {\n    switch (format) {\n        case \"utf-8\":\n            return utf8StringToUint8Array(value);\n        case \"base64\":\n            return base64ToUint8Array(value);\n        case \"base64url\":\n            return base64UrlToUint8Array(value);\n        case \"hex\":\n            return hexStringToUint8Array(value);\n    }\n}\n/**\n * Decodes a Uint8Array into a Base64 string.\n * @internal\n */\nexport function uint8ArrayToBase64(bytes) {\n    return btoa([...bytes].map((x) => String.fromCharCode(x)).join(\"\"));\n}\n/**\n * Decodes a Uint8Array into a Base64Url string.\n * @internal\n */\nexport function uint8ArrayToBase64Url(bytes) {\n    return uint8ArrayToBase64(bytes).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n}\n/**\n * Decodes a Uint8Array into a javascript string.\n * @internal\n */\nexport function uint8ArrayToUtf8String(bytes) {\n    const decoder = new TextDecoder();\n    const dataString = decoder.decode(bytes);\n    return dataString;\n}\n/**\n * Decodes a Uint8Array into a hex string\n * @internal\n */\nexport function uint8ArrayToHexString(bytes) {\n    return [...bytes].map((x) => x.toString(16).padStart(2, \"0\")).join(\"\");\n}\n/**\n * Encodes a JavaScript string into a Uint8Array.\n * @internal\n */\nexport function utf8StringToUint8Array(value) {\n    return new TextEncoder().encode(value);\n}\n/**\n * Encodes a Base64 string into a Uint8Array.\n * @internal\n */\nexport function base64ToUint8Array(value) {\n    return new Uint8Array([...atob(value)].map((x) => x.charCodeAt(0)));\n}\n/**\n * Encodes a Base64Url string into a Uint8Array.\n * @internal\n */\nexport function base64UrlToUint8Array(value) {\n    const base64String = value.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    return base64ToUint8Array(base64String);\n}\nconst hexDigits = new Set(\"0123456789abcdefABCDEF\");\n/**\n * Encodes a hex string into a Uint8Array\n * @internal\n */\nexport function hexStringToUint8Array(value) {\n    // If value has odd length, the last character will be ignored, consistent with NodeJS Buffer behavior\n    const bytes = new Uint8Array(value.length / 2);\n    for (let i = 0; i < value.length / 2; ++i) {\n        const highNibble = value[2 * i];\n        const lowNibble = value[2 * i + 1];\n        if (!hexDigits.has(highNibble) || !hexDigits.has(lowNibble)) {\n            // Replicate Node Buffer behavior by exiting early when we encounter an invalid byte\n            return bytes.slice(0, i);\n        }\n        bytes[i] = parseInt(`${highNibble}${lowNibble}`, 16);\n    }\n    return bytes;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function generateUUID() {\n    let uuid = \"\";\n    for (let i = 0; i < 32; i++) {\n        // Generate a random number between 0 and 15\n        const randomNumber = Math.floor(Math.random() * 16);\n        // Set the UUID version to 4 in the 13th position\n        if (i === 12) {\n            uuid += \"4\";\n        }\n        else if (i === 16) {\n            // Set the UUID variant to \"10\" in the 17th position\n            uuid += (randomNumber & 0x3) | 0x8;\n        }\n        else {\n            // Add a random hexadecimal digit to the UUID string\n            uuid += randomNumber.toString(16);\n        }\n        // Add hyphens to the UUID string at the appropriate positions\n        if (i === 7 || i === 11 || i === 15 || i === 19) {\n            uuid += \"-\";\n        }\n    }\n    return uuid;\n}\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function randomUUID() {\n    return generateUUID();\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nvar _a;\nimport { generateUUID } from \"./uuidUtils.common.js\";\n// NOTE: This could be undefined if not used in a secure context\nconst uuidFunction = typeof ((_a = globalThis === null || globalThis === void 0 ? void 0 : globalThis.crypto) === null || _a === void 0 ? void 0 : _a.randomUUID) === \"function\"\n    ? globalThis.crypto.randomUUID.bind(globalThis.crypto)\n    : generateUUID;\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function randomUUID() {\n    return uuidFunction();\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nvar _a, _b, _c, _d;\n/**\n * A constant that indicates whether the environment the code is running is a Web Browser.\n */\n// eslint-disable-next-line @azure/azure-sdk/ts-no-window\nexport const isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\n/**\n * A constant that indicates whether the environment the code is running is a Web Worker.\n */\nexport const isWebWorker = typeof self === \"object\" &&\n    typeof (self === null || self === void 0 ? void 0 : self.importScripts) === \"function\" &&\n    (((_a = self.constructor) === null || _a === void 0 ? void 0 : _a.name) === \"DedicatedWorkerGlobalScope\" ||\n        ((_b = self.constructor) === null || _b === void 0 ? void 0 : _b.name) === \"ServiceWorkerGlobalScope\" ||\n        ((_c = self.constructor) === null || _c === void 0 ? void 0 : _c.name) === \"SharedWorkerGlobalScope\");\n/**\n * A constant that indicates whether the environment the code is running is Deno.\n */\nexport const isDeno = typeof Deno !== \"undefined\" &&\n    typeof Deno.version !== \"undefined\" &&\n    typeof Deno.version.deno !== \"undefined\";\n/**\n * A constant that indicates whether the environment the code is running is Bun.sh.\n */\nexport const isBun = typeof Bun !== \"undefined\" && typeof Bun.version !== \"undefined\";\n/**\n * A constant that indicates whether the environment the code is running is a Node.js compatible environment.\n */\nexport const isNodeLike = typeof globalThis.process !== \"undefined\" &&\n    Boolean(globalThis.process.version) &&\n    Boolean((_d = globalThis.process.versions) === null || _d === void 0 ? void 0 : _d.node);\n/**\n * A constant that indicates whether the environment the code is running is a Node.js compatible environment.\n * @deprecated Use `isNodeLike` instead.\n */\nexport const isNode = isNodeLike;\n/**\n * A constant that indicates whether the environment the code is running is Node.JS.\n */\nexport const isNodeRuntime = isNodeLike && !isBun && !isDeno;\n/**\n * A constant that indicates whether the environment the code is running is in React-Native.\n */\n// https://github.com/facebook/react-native/blob/main/packages/react-native/Libraries/Core/setUpNavigator.js\nexport const isReactNative = typeof navigator !== \"undefined\" && (navigator === null || navigator === void 0 ? void 0 : navigator.product) === \"ReactNative\";\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Tests an object to determine whether it implements TokenCredential.\n *\n * @param credential - The assumed TokenCredential to be tested.\n */\nexport function isTokenCredential(credential) {\n    // Check for an object with a 'getToken' function and possibly with\n    // a 'signRequest' function.  We do this check to make sure that\n    // a ServiceClientCredentials implementor (like TokenClientCredentials\n    // in ms-rest-nodeauth) doesn't get mistaken for a TokenCredential if\n    // it doesn't actually implement TokenCredential also.\n    const castCredential = credential;\n    return (castCredential &&\n        typeof castCredential.getToken === \"function\" &&\n        (castCredential.signRequest === undefined || castCredential.getToken.length > 0));\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nconst ValidPhaseNames = new Set([\"Deserialize\", \"Serialize\", \"Retry\", \"Sign\"]);\n/**\n * A private implementation of Pipeline.\n * Do not export this class from the package.\n * @internal\n */\nclass HttpPipeline {\n    constructor(policies) {\n        var _a;\n        this._policies = [];\n        this._policies = (_a = policies === null || policies === void 0 ? void 0 : policies.slice(0)) !== null && _a !== void 0 ? _a : [];\n        this._orderedPolicies = undefined;\n    }\n    addPolicy(policy, options = {}) {\n        if (options.phase && options.afterPhase) {\n            throw new Error(\"Policies inside a phase cannot specify afterPhase.\");\n        }\n        if (options.phase && !ValidPhaseNames.has(options.phase)) {\n            throw new Error(`Invalid phase name: ${options.phase}`);\n        }\n        if (options.afterPhase && !ValidPhaseNames.has(options.afterPhase)) {\n            throw new Error(`Invalid afterPhase name: ${options.afterPhase}`);\n        }\n        this._policies.push({\n            policy,\n            options,\n        });\n        this._orderedPolicies = undefined;\n    }\n    removePolicy(options) {\n        const removedPolicies = [];\n        this._policies = this._policies.filter((policyDescriptor) => {\n            if ((options.name && policyDescriptor.policy.name === options.name) ||\n                (options.phase && policyDescriptor.options.phase === options.phase)) {\n                removedPolicies.push(policyDescriptor.policy);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n        this._orderedPolicies = undefined;\n        return removedPolicies;\n    }\n    sendRequest(httpClient, request) {\n        const policies = this.getOrderedPolicies();\n        const pipeline = policies.reduceRight((next, policy) => {\n            return (req) => {\n                return policy.sendRequest(req, next);\n            };\n        }, (req) => httpClient.sendRequest(req));\n        return pipeline(request);\n    }\n    getOrderedPolicies() {\n        if (!this._orderedPolicies) {\n            this._orderedPolicies = this.orderPolicies();\n        }\n        return this._orderedPolicies;\n    }\n    clone() {\n        return new HttpPipeline(this._policies);\n    }\n    static create() {\n        return new HttpPipeline();\n    }\n    orderPolicies() {\n        /**\n         * The goal of this method is to reliably order pipeline policies\n         * based on their declared requirements when they were added.\n         *\n         * Order is first determined by phase:\n         *\n         * 1. Serialize Phase\n         * 2. Policies not in a phase\n         * 3. Deserialize Phase\n         * 4. Retry Phase\n         * 5. Sign Phase\n         *\n         * Within each phase, policies are executed in the order\n         * they were added unless they were specified to execute\n         * before/after other policies or after a particular phase.\n         *\n         * To determine the final order, we will walk the policy list\n         * in phase order multiple times until all dependencies are\n         * satisfied.\n         *\n         * `afterPolicies` are the set of policies that must be\n         * executed before a given policy. This requirement is\n         * considered satisfied when each of the listed policies\n         * have been scheduled.\n         *\n         * `beforePolicies` are the set of policies that must be\n         * executed after a given policy. Since this dependency\n         * can be expressed by converting it into a equivalent\n         * `afterPolicies` declarations, they are normalized\n         * into that form for simplicity.\n         *\n         * An `afterPhase` dependency is considered satisfied when all\n         * policies in that phase have scheduled.\n         *\n         */\n        const result = [];\n        // Track all policies we know about.\n        const policyMap = new Map();\n        function createPhase(name) {\n            return {\n                name,\n                policies: new Set(),\n                hasRun: false,\n                hasAfterPolicies: false,\n            };\n        }\n        // Track policies for each phase.\n        const serializePhase = createPhase(\"Serialize\");\n        const noPhase = createPhase(\"None\");\n        const deserializePhase = createPhase(\"Deserialize\");\n        const retryPhase = createPhase(\"Retry\");\n        const signPhase = createPhase(\"Sign\");\n        // a list of phases in order\n        const orderedPhases = [serializePhase, noPhase, deserializePhase, retryPhase, signPhase];\n        // Small helper function to map phase name to each Phase\n        function getPhase(phase) {\n            if (phase === \"Retry\") {\n                return retryPhase;\n            }\n            else if (phase === \"Serialize\") {\n                return serializePhase;\n            }\n            else if (phase === \"Deserialize\") {\n                return deserializePhase;\n            }\n            else if (phase === \"Sign\") {\n                return signPhase;\n            }\n            else {\n                return noPhase;\n            }\n        }\n        // First walk each policy and create a node to track metadata.\n        for (const descriptor of this._policies) {\n            const policy = descriptor.policy;\n            const options = descriptor.options;\n            const policyName = policy.name;\n            if (policyMap.has(policyName)) {\n                throw new Error(\"Duplicate policy names not allowed in pipeline\");\n            }\n            const node = {\n                policy,\n                dependsOn: new Set(),\n                dependants: new Set(),\n            };\n            if (options.afterPhase) {\n                node.afterPhase = getPhase(options.afterPhase);\n                node.afterPhase.hasAfterPolicies = true;\n            }\n            policyMap.set(policyName, node);\n            const phase = getPhase(options.phase);\n            phase.policies.add(node);\n        }\n        // Now that each policy has a node, connect dependency references.\n        for (const descriptor of this._policies) {\n            const { policy, options } = descriptor;\n            const policyName = policy.name;\n            const node = policyMap.get(policyName);\n            if (!node) {\n                throw new Error(`Missing node for policy ${policyName}`);\n            }\n            if (options.afterPolicies) {\n                for (const afterPolicyName of options.afterPolicies) {\n                    const afterNode = policyMap.get(afterPolicyName);\n                    if (afterNode) {\n                        // Linking in both directions helps later\n                        // when we want to notify dependants.\n                        node.dependsOn.add(afterNode);\n                        afterNode.dependants.add(node);\n                    }\n                }\n            }\n            if (options.beforePolicies) {\n                for (const beforePolicyName of options.beforePolicies) {\n                    const beforeNode = policyMap.get(beforePolicyName);\n                    if (beforeNode) {\n                        // To execute before another node, make it\n                        // depend on the current node.\n                        beforeNode.dependsOn.add(node);\n                        node.dependants.add(beforeNode);\n                    }\n                }\n            }\n        }\n        function walkPhase(phase) {\n            phase.hasRun = true;\n            // Sets iterate in insertion order\n            for (const node of phase.policies) {\n                if (node.afterPhase && (!node.afterPhase.hasRun || node.afterPhase.policies.size)) {\n                    // If this node is waiting on a phase to complete,\n                    // we need to skip it for now.\n                    // Even if the phase is empty, we should wait for it\n                    // to be walked to avoid re-ordering policies.\n                    continue;\n                }\n                if (node.dependsOn.size === 0) {\n                    // If there's nothing else we're waiting for, we can\n                    // add this policy to the result list.\n                    result.push(node.policy);\n                    // Notify anything that depends on this policy that\n                    // the policy has been scheduled.\n                    for (const dependant of node.dependants) {\n                        dependant.dependsOn.delete(node);\n                    }\n                    policyMap.delete(node.policy.name);\n                    phase.policies.delete(node);\n                }\n            }\n        }\n        function walkPhases() {\n            for (const phase of orderedPhases) {\n                walkPhase(phase);\n                // if the phase isn't complete\n                if (phase.policies.size > 0 && phase !== noPhase) {\n                    if (!noPhase.hasRun) {\n                        // Try running noPhase to see if that unblocks this phase next tick.\n                        // This can happen if a phase that happens before noPhase\n                        // is waiting on a noPhase policy to complete.\n                        walkPhase(noPhase);\n                    }\n                    // Don't proceed to the next phase until this phase finishes.\n                    return;\n                }\n                if (phase.hasAfterPolicies) {\n                    // Run any policies unblocked by this phase\n                    walkPhase(noPhase);\n                }\n            }\n        }\n        // Iterate until we've put every node in the result list.\n        let iteration = 0;\n        while (policyMap.size > 0) {\n            iteration++;\n            const initialResultLength = result.length;\n            // Keep walking each phase in order until we can order every node.\n            walkPhases();\n            // The result list *should* get at least one larger each time\n            // after the first full pass.\n            // Otherwise, we're going to loop forever.\n            if (result.length <= initialResultLength && iteration > 1) {\n                throw new Error(\"Cannot satisfy policy dependencies due to requirements cycle.\");\n            }\n        }\n        return result;\n    }\n}\n/**\n * Creates a totally empty pipeline.\n * Useful for testing or creating a custom one.\n */\nexport function createEmptyPipeline() {\n    return HttpPipeline.create();\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nexport function log(...args) {\n    if (args.length > 0) {\n        const firstArg = String(args[0]);\n        if (firstArg.includes(\":error\")) {\n            console.error(...args);\n        }\n        else if (firstArg.includes(\":warning\")) {\n            console.warn(...args);\n        }\n        else if (firstArg.includes(\":info\")) {\n            console.info(...args);\n        }\n        else if (firstArg.includes(\":verbose\")) {\n            console.debug(...args);\n        }\n        else {\n            console.debug(...args);\n        }\n    }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { log } from \"./log.js\";\nconst debugEnvVariable = (typeof process !== \"undefined\" && process.env && process.env.DEBUG) || undefined;\nlet enabledString;\nlet enabledNamespaces = [];\nlet skippedNamespaces = [];\nconst debuggers = [];\nif (debugEnvVariable) {\n    enable(debugEnvVariable);\n}\nconst debugObj = Object.assign((namespace) => {\n    return createDebugger(namespace);\n}, {\n    enable,\n    enabled,\n    disable,\n    log,\n});\nfunction enable(namespaces) {\n    enabledString = namespaces;\n    enabledNamespaces = [];\n    skippedNamespaces = [];\n    const wildcard = /\\*/g;\n    const namespaceList = namespaces.split(\",\").map((ns) => ns.trim().replace(wildcard, \".*?\"));\n    for (const ns of namespaceList) {\n        if (ns.startsWith(\"-\")) {\n            skippedNamespaces.push(new RegExp(`^${ns.substr(1)}$`));\n        }\n        else {\n            enabledNamespaces.push(new RegExp(`^${ns}$`));\n        }\n    }\n    for (const instance of debuggers) {\n        instance.enabled = enabled(instance.namespace);\n    }\n}\nfunction enabled(namespace) {\n    if (namespace.endsWith(\"*\")) {\n        return true;\n    }\n    for (const skipped of skippedNamespaces) {\n        if (skipped.test(namespace)) {\n            return false;\n        }\n    }\n    for (const enabledNamespace of enabledNamespaces) {\n        if (enabledNamespace.test(namespace)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction disable() {\n    const result = enabledString || \"\";\n    enable(\"\");\n    return result;\n}\nfunction createDebugger(namespace) {\n    const newDebugger = Object.assign(debug, {\n        enabled: enabled(namespace),\n        destroy,\n        log: debugObj.log,\n        namespace,\n        extend,\n    });\n    function debug(...args) {\n        if (!newDebugger.enabled) {\n            return;\n        }\n        if (args.length > 0) {\n            args[0] = `${namespace} ${args[0]}`;\n        }\n        newDebugger.log(...args);\n    }\n    debuggers.push(newDebugger);\n    return newDebugger;\n}\nfunction destroy() {\n    const index = debuggers.indexOf(this);\n    if (index >= 0) {\n        debuggers.splice(index, 1);\n        return true;\n    }\n    return false;\n}\nfunction extend(namespace) {\n    const newDebugger = createDebugger(`${this.namespace}:${namespace}`);\n    newDebugger.log = this.log;\n    return newDebugger;\n}\nexport default debugObj;\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport debug from \"./debug.js\";\nconst registeredLoggers = new Set();\nconst logLevelFromEnv = (typeof process !== \"undefined\" && process.env && process.env.AZURE_LOG_LEVEL) || undefined;\nlet azureLogLevel;\n/**\n * The AzureLogger provides a mechanism for overriding where logs are output to.\n * By default, logs are sent to stderr.\n * Override the `log` method to redirect logs to another location.\n */\nexport const AzureLogger = debug(\"azure\");\nAzureLogger.log = (...args) => {\n    debug.log(...args);\n};\nconst AZURE_LOG_LEVELS = [\"verbose\", \"info\", \"warning\", \"error\"];\nif (logLevelFromEnv) {\n    // avoid calling setLogLevel because we don't want a mis-set environment variable to crash\n    if (isAzureLogLevel(logLevelFromEnv)) {\n        setLogLevel(logLevelFromEnv);\n    }\n    else {\n        console.error(`AZURE_LOG_LEVEL set to unknown log level '${logLevelFromEnv}'; logging is not enabled. Acceptable values: ${AZURE_LOG_LEVELS.join(\", \")}.`);\n    }\n}\n/**\n * Immediately enables logging at the specified log level. If no level is specified, logging is disabled.\n * @param level - The log level to enable for logging.\n * Options from most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\nexport function setLogLevel(level) {\n    if (level && !isAzureLogLevel(level)) {\n        throw new Error(`Unknown log level '${level}'. Acceptable values: ${AZURE_LOG_LEVELS.join(\",\")}`);\n    }\n    azureLogLevel = level;\n    const enabledNamespaces = [];\n    for (const logger of registeredLoggers) {\n        if (shouldEnable(logger)) {\n            enabledNamespaces.push(logger.namespace);\n        }\n    }\n    debug.enable(enabledNamespaces.join(\",\"));\n}\n/**\n * Retrieves the currently specified log level.\n */\nexport function getLogLevel() {\n    return azureLogLevel;\n}\nconst levelMap = {\n    verbose: 400,\n    info: 300,\n    warning: 200,\n    error: 100,\n};\n/**\n * Creates a logger for use by the Azure SDKs that inherits from `AzureLogger`.\n * @param namespace - The name of the SDK package.\n * @hidden\n */\nexport function createClientLogger(namespace) {\n    const clientRootLogger = AzureLogger.extend(namespace);\n    patchLogMethod(AzureLogger, clientRootLogger);\n    return {\n        error: createLogger(clientRootLogger, \"error\"),\n        warning: createLogger(clientRootLogger, \"warning\"),\n        info: createLogger(clientRootLogger, \"info\"),\n        verbose: createLogger(clientRootLogger, \"verbose\"),\n    };\n}\nfunction patchLogMethod(parent, child) {\n    child.log = (...args) => {\n        parent.log(...args);\n    };\n}\nfunction createLogger(parent, level) {\n    const logger = Object.assign(parent.extend(level), {\n        level,\n    });\n    patchLogMethod(parent, logger);\n    if (shouldEnable(logger)) {\n        const enabledNamespaces = debug.disable();\n        debug.enable(enabledNamespaces + \",\" + logger.namespace);\n    }\n    registeredLoggers.add(logger);\n    return logger;\n}\nfunction shouldEnable(logger) {\n    return Boolean(azureLogLevel && levelMap[logger.level] <= levelMap[azureLogLevel]);\n}\nfunction isAzureLogLevel(logLevel) {\n    return AZURE_LOG_LEVELS.includes(logLevel);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { createClientLogger } from \"@azure/logger\";\nexport const logger = createClientLogger(\"core-rest-pipeline\");\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { isObject } from \"@azure/core-util\";\nconst RedactedString = \"REDACTED\";\n// Make sure this list is up-to-date with the one under core/logger/Readme#Keyconcepts\nconst defaultAllowedHeaderNames = [\n    \"x-ms-client-request-id\",\n    \"x-ms-return-client-request-id\",\n    \"x-ms-useragent\",\n    \"x-ms-correlation-request-id\",\n    \"x-ms-request-id\",\n    \"client-request-id\",\n    \"ms-cv\",\n    \"return-client-request-id\",\n    \"traceparent\",\n    \"Access-Control-Allow-Credentials\",\n    \"Access-Control-Allow-Headers\",\n    \"Access-Control-Allow-Methods\",\n    \"Access-Control-Allow-Origin\",\n    \"Access-Control-Expose-Headers\",\n    \"Access-Control-Max-Age\",\n    \"Access-Control-Request-Headers\",\n    \"Access-Control-Request-Method\",\n    \"Origin\",\n    \"Accept\",\n    \"Accept-Encoding\",\n    \"Cache-Control\",\n    \"Connection\",\n    \"Content-Length\",\n    \"Content-Type\",\n    \"Date\",\n    \"ETag\",\n    \"Expires\",\n    \"If-Match\",\n    \"If-Modified-Since\",\n    \"If-None-Match\",\n    \"If-Unmodified-Since\",\n    \"Last-Modified\",\n    \"Pragma\",\n    \"Request-Id\",\n    \"Retry-After\",\n    \"Server\",\n    \"Transfer-Encoding\",\n    \"User-Agent\",\n    \"WWW-Authenticate\",\n];\nconst defaultAllowedQueryParameters = [\"api-version\"];\n/**\n * @internal\n */\nexport class Sanitizer {\n    constructor({ additionalAllowedHeaderNames: allowedHeaderNames = [], additionalAllowedQueryParameters: allowedQueryParameters = [], } = {}) {\n        allowedHeaderNames = defaultAllowedHeaderNames.concat(allowedHeaderNames);\n        allowedQueryParameters = defaultAllowedQueryParameters.concat(allowedQueryParameters);\n        this.allowedHeaderNames = new Set(allowedHeaderNames.map((n) => n.toLowerCase()));\n        this.allowedQueryParameters = new Set(allowedQueryParameters.map((p) => p.toLowerCase()));\n    }\n    sanitize(obj) {\n        const seen = new Set();\n        return JSON.stringify(obj, (key, value) => {\n            // Ensure Errors include their interesting non-enumerable members\n            if (value instanceof Error) {\n                return Object.assign(Object.assign({}, value), { name: value.name, message: value.message });\n            }\n            if (key === \"headers\") {\n                return this.sanitizeHeaders(value);\n            }\n            else if (key === \"url\") {\n                return this.sanitizeUrl(value);\n            }\n            else if (key === \"query\") {\n                return this.sanitizeQuery(value);\n            }\n            else if (key === \"body\") {\n                // Don't log the request body\n                return undefined;\n            }\n            else if (key === \"response\") {\n                // Don't log response again\n                return undefined;\n            }\n            else if (key === \"operationSpec\") {\n                // When using sendOperationRequest, the request carries a massive\n                // field with the autorest spec. No need to log it.\n                return undefined;\n            }\n            else if (Array.isArray(value) || isObject(value)) {\n                if (seen.has(value)) {\n                    return \"[Circular]\";\n                }\n                seen.add(value);\n            }\n            return value;\n        }, 2);\n    }\n    sanitizeHeaders(obj) {\n        const sanitized = {};\n        for (const key of Object.keys(obj)) {\n            if (this.allowedHeaderNames.has(key.toLowerCase())) {\n                sanitized[key] = obj[key];\n            }\n            else {\n                sanitized[key] = RedactedString;\n            }\n        }\n        return sanitized;\n    }\n    sanitizeQuery(value) {\n        if (typeof value !== \"object\" || value === null) {\n            return value;\n        }\n        const sanitized = {};\n        for (const k of Object.keys(value)) {\n            if (this.allowedQueryParameters.has(k.toLowerCase())) {\n                sanitized[k] = value[k];\n            }\n            else {\n                sanitized[k] = RedactedString;\n            }\n        }\n        return sanitized;\n    }\n    sanitizeUrl(value) {\n        if (typeof value !== \"string\" || value === null) {\n            return value;\n        }\n        const url = new URL(value);\n        if (!url.search) {\n            return value;\n        }\n        for (const [key] of url.searchParams) {\n            if (!this.allowedQueryParameters.has(key.toLowerCase())) {\n                url.searchParams.set(key, RedactedString);\n            }\n        }\n        return url.toString();\n    }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { logger as coreLogger } from \"../log.js\";\nimport { Sanitizer } from \"../util/sanitizer.js\";\n/**\n * The programmatic identifier of the logPolicy.\n */\nexport const logPolicyName = \"logPolicy\";\n/**\n * A policy that logs all requests and responses.\n * @param options - Options to configure logPolicy.\n */\nexport function logPolicy(options = {}) {\n    var _a;\n    const logger = (_a = options.logger) !== null && _a !== void 0 ? _a : coreLogger.info;\n    const sanitizer = new Sanitizer({\n        additionalAllowedHeaderNames: options.additionalAllowedHeaderNames,\n        additionalAllowedQueryParameters: options.additionalAllowedQueryParameters,\n    });\n    return {\n        name: logPolicyName,\n        async sendRequest(request, next) {\n            if (!logger.enabled) {\n                return next(request);\n            }\n            logger(`Request: ${sanitizer.sanitize(request)}`);\n            const response = await next(request);\n            logger(`Response status code: ${response.status}`);\n            logger(`Headers: ${sanitizer.sanitize(response.headers)}`);\n            return response;\n        },\n    };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * The programmatic identifier of the redirectPolicy.\n */\nexport const redirectPolicyName = \"redirectPolicy\";\n/**\n * Methods that are allowed to follow redirects 301 and 302\n */\nconst allowedRedirect = [\"GET\", \"HEAD\"];\n/**\n * A policy to follow Location headers from the server in order\n * to support server-side redirection.\n * In the browser, this policy is not used.\n * @param options - Options to control policy behavior.\n */\nexport function redirectPolicy(options = {}) {\n    const { maxRetries = 20 } = options;\n    return {\n        name: redirectPolicyName,\n        async sendRequest(request, next) {\n            const response = await next(request);\n            return handleRedirect(next, response, maxRetries);\n        },\n    };\n}\nasync function handleRedirect(next, response, maxRetries, currentRetries = 0) {\n    const { request, status, headers } = response;\n    const locationHeader = headers.get(\"location\");\n    if (locationHeader &&\n        (status === 300 ||\n            (status === 301 && allowedRedirect.includes(request.method)) ||\n            (status === 302 && allowedRedirect.includes(request.method)) ||\n            (status === 303 && request.method === \"POST\") ||\n            status === 307) &&\n        currentRetries < maxRetries) {\n        const url = new URL(locationHeader, request.url);\n        request.url = url.toString();\n        // POST request with Status code 303 should be converted into a\n        // redirected GET request if the redirect url is present in the location header\n        if (status === 303) {\n            request.method = \"GET\";\n            request.headers.delete(\"Content-Length\");\n            delete request.body;\n        }\n        request.headers.delete(\"Authorization\");\n        const res = await next(request);\n        return handleRedirect(next, res, maxRetries, currentRetries + 1);\n    }\n    return response;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/*\n * NOTE: When moving this file, please update \"browser\" section in package.json.\n */\n/**\n * @internal\n */\nexport function getHeaderName() {\n    return \"x-ms-useragent\";\n}\n/**\n * @internal\n */\nexport function setPlatformSpecificData(map) {\n    var _a, _b, _c;\n    const localNavigator = globalThis.navigator;\n    map.set(\"OS\", ((_c = (_b = (_a = localNavigator === null || localNavigator === void 0 ? void 0 : localNavigator.userAgentData) === null || _a === void 0 ? void 0 : _a.platform) !== null && _b !== void 0 ? _b : localNavigator === null || localNavigator === void 0 ? void 0 : localNavigator.platform) !== null && _c !== void 0 ? _c : \"unknown\").replace(\" \", \"\"));\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nexport const SDK_VERSION = \"1.15.2\";\nexport const DEFAULT_RETRY_POLICY_COUNT = 3;\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { getHeaderName, setPlatformSpecificData } from \"./userAgentPlatform.js\";\nimport { SDK_VERSION } from \"../constants.js\";\nfunction getUserAgentString(telemetryInfo) {\n    const parts = [];\n    for (const [key, value] of telemetryInfo) {\n        const token = value ? `${key}/${value}` : key;\n        parts.push(token);\n    }\n    return parts.join(\" \");\n}\n/**\n * @internal\n */\nexport function getUserAgentHeaderName() {\n    return getHeaderName();\n}\n/**\n * @internal\n */\nexport function getUserAgentValue(prefix) {\n    const runtimeInfo = new Map();\n    runtimeInfo.set(\"core-rest-pipeline\", SDK_VERSION);\n    setPlatformSpecificData(runtimeInfo);\n    const defaultAgent = getUserAgentString(runtimeInfo);\n    const userAgentValue = prefix ? `${prefix} ${defaultAgent}` : defaultAgent;\n    return userAgentValue;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { getUserAgentHeaderName, getUserAgentValue } from \"../util/userAgent.js\";\nconst UserAgentHeaderName = getUserAgentHeaderName();\n/**\n * The programmatic identifier of the userAgentPolicy.\n */\nexport const userAgentPolicyName = \"userAgentPolicy\";\n/**\n * A policy that sets the User-Agent header (or equivalent) to reflect\n * the library version.\n * @param options - Options to customize the user agent value.\n */\nexport function userAgentPolicy(options = {}) {\n    const userAgentValue = getUserAgentValue(options.userAgentPrefix);\n    return {\n        name: userAgentPolicyName,\n        async sendRequest(request, next) {\n            if (!request.headers.has(UserAgentHeaderName)) {\n                request.headers.set(UserAgentHeaderName, userAgentValue);\n            }\n            return next(request);\n        },\n    };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nexport function isNodeReadableStream(x) {\n    return Boolean(x && typeof x[\"pipe\"] === \"function\");\n}\nexport function isWebReadableStream(x) {\n    return Boolean(x &&\n        typeof x.getReader === \"function\" &&\n        typeof x.tee === \"function\");\n}\nexport function isReadableStream(x) {\n    return isNodeReadableStream(x) || isWebReadableStream(x);\n}\nexport function isBlob(x) {\n    return typeof x.stream === \"function\";\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { isNode } from \"@azure/core-util\";\nimport { isNodeReadableStream } from \"./typeGuards.js\";\nconst unimplementedMethods = {\n    arrayBuffer: () => {\n        throw new Error(\"Not implemented\");\n    },\n    slice: () => {\n        throw new Error(\"Not implemented\");\n    },\n    text: () => {\n        throw new Error(\"Not implemented\");\n    },\n};\n/**\n * Private symbol used as key on objects created using createFile containing the\n * original source of the file object.\n *\n * This is used in Node to access the original Node stream without using Blob#stream, which\n * returns a web stream. This is done to avoid a couple of bugs to do with Blob#stream and\n * Readable#to/fromWeb in Node versions we support:\n * - https://github.com/nodejs/node/issues/42694 (fixed in Node 18.14)\n * - https://github.com/nodejs/node/issues/48916 (fixed in Node 20.6)\n *\n * Once these versions are no longer supported, we may be able to stop doing this.\n *\n * @internal\n */\nconst rawContent = Symbol(\"rawContent\");\nfunction hasRawContent(x) {\n    return typeof x[rawContent] === \"function\";\n}\n/**\n * Extract the raw content from a given blob-like object. If the input was created using createFile\n * or createFileFromStream, the exact content passed into createFile/createFileFromStream will be used.\n * For true instances of Blob and File, returns the blob's content as a Web ReadableStream<Uint8Array>.\n *\n * @internal\n */\nexport function getRawContent(blob) {\n    if (hasRawContent(blob)) {\n        return blob[rawContent]();\n    }\n    else {\n        return blob.stream();\n    }\n}\n/**\n * Create an object that implements the File interface. This object is intended to be\n * passed into RequestBodyType.formData, and is not guaranteed to work as expected in\n * other situations.\n *\n * Use this function to:\n * - Create a File object for use in RequestBodyType.formData in environments where the\n *   global File object is unavailable.\n * - Create a File-like object from a readable stream without reading the stream into memory.\n *\n * @param stream - the content of the file as a callback returning a stream. When a File object made using createFile is\n *                  passed in a request's form data map, the stream will not be read into memory\n *                  and instead will be streamed when the request is made. In the event of a retry, the\n *                  stream needs to be read again, so this callback SHOULD return a fresh stream if possible.\n * @param name - the name of the file.\n * @param options - optional metadata about the file, e.g. file name, file size, MIME type.\n */\nexport function createFileFromStream(stream, name, options = {}) {\n    var _a, _b, _c, _d;\n    return Object.assign(Object.assign({}, unimplementedMethods), { type: (_a = options.type) !== null && _a !== void 0 ? _a : \"\", lastModified: (_b = options.lastModified) !== null && _b !== void 0 ? _b : new Date().getTime(), webkitRelativePath: (_c = options.webkitRelativePath) !== null && _c !== void 0 ? _c : \"\", size: (_d = options.size) !== null && _d !== void 0 ? _d : -1, name, stream: () => {\n            const s = stream();\n            if (isNodeReadableStream(s)) {\n                throw new Error(\"Not supported: a Node stream was provided as input to createFileFromStream.\");\n            }\n            return s;\n        }, [rawContent]: stream });\n}\n/**\n * Create an object that implements the File interface. This object is intended to be\n * passed into RequestBodyType.formData, and is not guaranteed to work as expected in\n * other situations.\n *\n * Use this function create a File object for use in RequestBodyType.formData in environments where the global File object is unavailable.\n *\n * @param content - the content of the file as a Uint8Array in memory.\n * @param name - the name of the file.\n * @param options - optional metadata about the file, e.g. file name, file size, MIME type.\n */\nexport function createFile(content, name, options = {}) {\n    var _a, _b, _c;\n    if (isNode) {\n        return Object.assign(Object.assign({}, unimplementedMethods), { type: (_a = options.type) !== null && _a !== void 0 ? _a : \"\", lastModified: (_b = options.lastModified) !== null && _b !== void 0 ? _b : new Date().getTime(), webkitRelativePath: (_c = options.webkitRelativePath) !== null && _c !== void 0 ? _c : \"\", size: content.byteLength, name, arrayBuffer: async () => content.buffer, stream: () => new Blob([content]).stream(), [rawContent]: () => content });\n    }\n    else {\n        return new File([content], name, options);\n    }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { getRawContent } from \"./file.js\";\nimport { isNodeReadableStream, isWebReadableStream } from \"./typeGuards.js\";\n/**\n * Drain the content of the given ReadableStream into a Blob.\n * The blob's content may end up in memory or on disk dependent on size.\n */\nfunction drain(stream) {\n    return new Response(stream).blob();\n}\nasync function toBlobPart(source) {\n    if (source instanceof Blob || source instanceof Uint8Array) {\n        return source;\n    }\n    if (isWebReadableStream(source)) {\n        return drain(source);\n    }\n    // If it's not a true Blob, and it's not a Uint8Array, we can assume the source\n    // is a fake File created by createFileFromStream and we can get the original stream\n    // using getRawContent.\n    const rawContent = getRawContent(source);\n    // Shouldn't happen but guard for it anyway\n    if (isNodeReadableStream(rawContent)) {\n        throw new Error(\"Encountered unexpected type. In the browser, `concat` supports Web ReadableStream, Blob, Uint8Array, and files created using `createFile` only.\");\n    }\n    return toBlobPart(rawContent);\n}\n/**\n * Utility function that concatenates a set of binary inputs into one combined output.\n *\n * @param sources - array of sources for the concatenation\n * @returns - in Node, a (() =\\> NodeJS.ReadableStream) which, when read, produces a concatenation of all the inputs.\n *           In browser, returns a `Blob` representing all the concatenated inputs.\n *\n * @internal\n */\nexport async function concat(sources) {\n    const parts = [];\n    for (const source of sources) {\n        parts.push(await toBlobPart(typeof source === \"function\" ? source() : source));\n    }\n    return new Blob(parts);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { randomUUID, stringToUint8Array } from \"@azure/core-util\";\nimport { concat } from \"../util/concat.js\";\nimport { isBlob } from \"../util/typeGuards.js\";\nfunction generateBoundary() {\n    return `----AzSDKFormBoundary${randomUUID()}`;\n}\nfunction encodeHeaders(headers) {\n    let result = \"\";\n    for (const [key, value] of headers) {\n        result += `${key}: ${value}\\r\\n`;\n    }\n    return result;\n}\nfunction getLength(source) {\n    if (source instanceof Uint8Array) {\n        return source.byteLength;\n    }\n    else if (isBlob(source)) {\n        // if was created using createFile then -1 means we have an unknown size\n        return source.size === -1 ? undefined : source.size;\n    }\n    else {\n        return undefined;\n    }\n}\nfunction getTotalLength(sources) {\n    let total = 0;\n    for (const source of sources) {\n        const partLength = getLength(source);\n        if (partLength === undefined) {\n            return undefined;\n        }\n        else {\n            total += partLength;\n        }\n    }\n    return total;\n}\nasync function buildRequestBody(request, parts, boundary) {\n    const sources = [\n        stringToUint8Array(`--${boundary}`, \"utf-8\"),\n        ...parts.flatMap((part) => [\n            stringToUint8Array(\"\\r\\n\", \"utf-8\"),\n            stringToUint8Array(encodeHeaders(part.headers), \"utf-8\"),\n            stringToUint8Array(\"\\r\\n\", \"utf-8\"),\n            part.body,\n            stringToUint8Array(`\\r\\n--${boundary}`, \"utf-8\"),\n        ]),\n        stringToUint8Array(\"--\\r\\n\\r\\n\", \"utf-8\"),\n    ];\n    const contentLength = getTotalLength(sources);\n    if (contentLength) {\n        request.headers.set(\"Content-Length\", contentLength);\n    }\n    request.body = await concat(sources);\n}\n/**\n * Name of multipart policy\n */\nexport const multipartPolicyName = \"multipartPolicy\";\nconst maxBoundaryLength = 70;\nconst validBoundaryCharacters = new Set(`abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'()+,-./:=?`);\nfunction assertValidBoundary(boundary) {\n    if (boundary.length > maxBoundaryLength) {\n        throw new Error(`Multipart boundary \"${boundary}\" exceeds maximum length of 70 characters`);\n    }\n    if (Array.from(boundary).some((x) => !validBoundaryCharacters.has(x))) {\n        throw new Error(`Multipart boundary \"${boundary}\" contains invalid characters`);\n    }\n}\n/**\n * Pipeline policy for multipart requests\n */\nexport function multipartPolicy() {\n    return {\n        name: multipartPolicyName,\n        async sendRequest(request, next) {\n            var _a;\n            if (!request.multipartBody) {\n                return next(request);\n            }\n            if (request.body) {\n                throw new Error(\"multipartBody and regular body cannot be set at the same time\");\n            }\n            let boundary = request.multipartBody.boundary;\n            const contentTypeHeader = (_a = request.headers.get(\"Content-Type\")) !== null && _a !== void 0 ? _a : \"multipart/mixed\";\n            const parsedHeader = contentTypeHeader.match(/^(multipart\\/[^ ;]+)(?:; *boundary=(.+))?$/);\n            if (!parsedHeader) {\n                throw new Error(`Got multipart request body, but content-type header was not multipart: ${contentTypeHeader}`);\n            }\n            const [, contentType, parsedBoundary] = parsedHeader;\n            if (parsedBoundary && boundary && parsedBoundary !== boundary) {\n                throw new Error(`Multipart boundary was specified as ${parsedBoundary} in the header, but got ${boundary} in the request body`);\n            }\n            boundary !== null && boundary !== void 0 ? boundary : (boundary = parsedBoundary);\n            if (boundary) {\n                assertValidBoundary(boundary);\n            }\n            else {\n                boundary = generateBoundary();\n            }\n            request.headers.set(\"Content-Type\", `${contentType}; boundary=${boundary}`);\n            await buildRequestBody(request, request.multipartBody.parts, boundary);\n            request.multipartBody = undefined;\n            return next(request);\n        },\n    };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/*\n * NOTE: When moving this file, please update \"browser\" section in package.json\n */\nexport const decompressResponsePolicyName = \"decompressResponsePolicy\";\n/**\n * decompressResponsePolicy is not supported in the browser and attempting\n * to use it will raise an error.\n */\nexport function decompressResponsePolicy() {\n    throw new Error(\"decompressResponsePolicy is not supported in browser environment\");\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { AbortError } from \"@azure/abort-controller\";\nconst StandardAbortMessage = \"The operation was aborted.\";\n/**\n * A wrapper for setTimeout that resolves a promise after delayInMs milliseconds.\n * @param delayInMs - The number of milliseconds to be delayed.\n * @param value - The value to be resolved with after a timeout of t milliseconds.\n * @param options - The options for delay - currently abort options\n *                  - abortSignal - The abortSignal associated with containing operation.\n *                  - abortErrorMsg - The abort error message associated with containing operation.\n * @returns Resolved promise\n */\nexport function delay(delayInMs, value, options) {\n    return new Promise((resolve, reject) => {\n        let timer = undefined;\n        let onAborted = undefined;\n        const rejectOnAbort = () => {\n            return reject(new AbortError((options === null || options === void 0 ? void 0 : options.abortErrorMsg) ? options === null || options === void 0 ? void 0 : options.abortErrorMsg : StandardAbortMessage));\n        };\n        const removeListeners = () => {\n            if ((options === null || options === void 0 ? void 0 : options.abortSignal) && onAborted) {\n                options.abortSignal.removeEventListener(\"abort\", onAborted);\n            }\n        };\n        onAborted = () => {\n            if (timer) {\n                clearTimeout(timer);\n            }\n            removeListeners();\n            return rejectOnAbort();\n        };\n        if ((options === null || options === void 0 ? void 0 : options.abortSignal) && options.abortSignal.aborted) {\n            return rejectOnAbort();\n        }\n        timer = setTimeout(() => {\n            removeListeners();\n            resolve(value);\n        }, delayInMs);\n        if (options === null || options === void 0 ? void 0 : options.abortSignal) {\n            options.abortSignal.addEventListener(\"abort\", onAborted);\n        }\n    });\n}\n/**\n * @internal\n * @returns the parsed value or undefined if the parsed value is invalid.\n */\nexport function parseHeaderValueAsNumber(response, headerName) {\n    const value = response.headers.get(headerName);\n    if (!value)\n        return;\n    const valueAsNum = Number(value);\n    if (Number.isNaN(valueAsNum))\n        return;\n    return valueAsNum;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { parseHeaderValueAsNumber } from \"../util/helpers.js\";\n/**\n * The header that comes back from Azure services representing\n * the amount of time (minimum) to wait to retry (in seconds or timestamp after which we can retry).\n */\nconst RetryAfterHeader = \"Retry-After\";\n/**\n * The headers that come back from Azure services representing\n * the amount of time (minimum) to wait to retry.\n *\n * \"retry-after-ms\", \"x-ms-retry-after-ms\" : milliseconds\n * \"Retry-After\" : seconds or timestamp\n */\nconst AllRetryAfterHeaders = [\"retry-after-ms\", \"x-ms-retry-after-ms\", RetryAfterHeader];\n/**\n * A response is a throttling retry response if it has a throttling status code (429 or 503),\n * as long as one of the [ \"Retry-After\" or \"retry-after-ms\" or \"x-ms-retry-after-ms\" ] headers has a valid value.\n *\n * Returns the `retryAfterInMs` value if the response is a throttling retry response.\n * If not throttling retry response, returns `undefined`.\n *\n * @internal\n */\nfunction getRetryAfterInMs(response) {\n    if (!(response && [429, 503].includes(response.status)))\n        return undefined;\n    try {\n        // Headers: \"retry-after-ms\", \"x-ms-retry-after-ms\", \"Retry-After\"\n        for (const header of AllRetryAfterHeaders) {\n            const retryAfterValue = parseHeaderValueAsNumber(response, header);\n            if (retryAfterValue === 0 || retryAfterValue) {\n                // \"Retry-After\" header ==> seconds\n                // \"retry-after-ms\", \"x-ms-retry-after-ms\" headers ==> milli-seconds\n                const multiplyingFactor = header === RetryAfterHeader ? 1000 : 1;\n                return retryAfterValue * multiplyingFactor; // in milli-seconds\n            }\n        }\n        // RetryAfterHeader (\"Retry-After\") has a special case where it might be formatted as a date instead of a number of seconds\n        const retryAfterHeader = response.headers.get(RetryAfterHeader);\n        if (!retryAfterHeader)\n            return;\n        const date = Date.parse(retryAfterHeader);\n        const diff = date - Date.now();\n        // negative diff would mean a date in the past, so retry asap with 0 milliseconds\n        return Number.isFinite(diff) ? Math.max(0, diff) : undefined;\n    }\n    catch (e) {\n        return undefined;\n    }\n}\n/**\n * A response is a retry response if it has a throttling status code (429 or 503),\n * as long as one of the [ \"Retry-After\" or \"retry-after-ms\" or \"x-ms-retry-after-ms\" ] headers has a valid value.\n */\nexport function isThrottlingRetryResponse(response) {\n    return Number.isFinite(getRetryAfterInMs(response));\n}\nexport function throttlingRetryStrategy() {\n    return {\n        name: \"throttlingRetryStrategy\",\n        retry({ response }) {\n            const retryAfterInMs = getRetryAfterInMs(response);\n            if (!Number.isFinite(retryAfterInMs)) {\n                return { skipStrategy: true };\n            }\n            return {\n                retryAfterInMs,\n            };\n        },\n    };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { getRandomIntegerInclusive } from \"@azure/core-util\";\nimport { isThrottlingRetryResponse } from \"./throttlingRetryStrategy.js\";\n// intervals are in milliseconds\nconst DEFAULT_CLIENT_RETRY_INTERVAL = 1000;\nconst DEFAULT_CLIENT_MAX_RETRY_INTERVAL = 1000 * 64;\n/**\n * A retry strategy that retries with an exponentially increasing delay in these two cases:\n * - When there are errors in the underlying transport layer (e.g. DNS lookup failures).\n * - Or otherwise if the outgoing request fails (408, greater or equal than 500, except for 501 and 505).\n */\nexport function exponentialRetryStrategy(options = {}) {\n    var _a, _b;\n    const retryInterval = (_a = options.retryDelayInMs) !== null && _a !== void 0 ? _a : DEFAULT_CLIENT_RETRY_INTERVAL;\n    const maxRetryInterval = (_b = options.maxRetryDelayInMs) !== null && _b !== void 0 ? _b : DEFAULT_CLIENT_MAX_RETRY_INTERVAL;\n    let retryAfterInMs = retryInterval;\n    return {\n        name: \"exponentialRetryStrategy\",\n        retry({ retryCount, response, responseError }) {\n            const matchedSystemError = isSystemError(responseError);\n            const ignoreSystemErrors = matchedSystemError && options.ignoreSystemErrors;\n            const isExponential = isExponentialRetryResponse(response);\n            const ignoreExponentialResponse = isExponential && options.ignoreHttpStatusCodes;\n            const unknownResponse = response && (isThrottlingRetryResponse(response) || !isExponential);\n            if (unknownResponse || ignoreExponentialResponse || ignoreSystemErrors) {\n                return { skipStrategy: true };\n            }\n            if (responseError && !matchedSystemError && !isExponential) {\n                return { errorToThrow: responseError };\n            }\n            // Exponentially increase the delay each time\n            const exponentialDelay = retryAfterInMs * Math.pow(2, retryCount);\n            // Don't let the delay exceed the maximum\n            const clampedExponentialDelay = Math.min(maxRetryInterval, exponentialDelay);\n            // Allow the final value to have some \"jitter\" (within 50% of the delay size) so\n            // that retries across multiple clients don't occur simultaneously.\n            retryAfterInMs =\n                clampedExponentialDelay / 2 + getRandomIntegerInclusive(0, clampedExponentialDelay / 2);\n            return { retryAfterInMs };\n        },\n    };\n}\n/**\n * A response is a retry response if it has status codes:\n * - 408, or\n * - Greater or equal than 500, except for 501 and 505.\n */\nexport function isExponentialRetryResponse(response) {\n    return Boolean(response &&\n        response.status !== undefined &&\n        (response.status >= 500 || response.status === 408) &&\n        response.status !== 501 &&\n        response.status !== 505);\n}\n/**\n * Determines whether an error from a pipeline response was triggered in the network layer.\n */\nexport function isSystemError(err) {\n    if (!err) {\n        return false;\n    }\n    return (err.code === \"ETIMEDOUT\" ||\n        err.code === \"ESOCKETTIMEDOUT\" ||\n        err.code === \"ECONNREFUSED\" ||\n        err.code === \"ECONNRESET\" ||\n        err.code === \"ENOENT\" ||\n        err.code === \"ENOTFOUND\");\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { delay } from \"../util/helpers.js\";\nimport { createClientLogger } from \"@azure/logger\";\nimport { AbortError } from \"@azure/abort-controller\";\nimport { DEFAULT_RETRY_POLICY_COUNT } from \"../constants.js\";\nconst retryPolicyLogger = createClientLogger(\"core-rest-pipeline retryPolicy\");\n/**\n * The programmatic identifier of the retryPolicy.\n */\nconst retryPolicyName = \"retryPolicy\";\n/**\n * retryPolicy is a generic policy to enable retrying requests when certain conditions are met\n */\nexport function retryPolicy(strategies, options = { maxRetries: DEFAULT_RETRY_POLICY_COUNT }) {\n    const logger = options.logger || retryPolicyLogger;\n    return {\n        name: retryPolicyName,\n        async sendRequest(request, next) {\n            var _a, _b;\n            let response;\n            let responseError;\n            let retryCount = -1;\n            // eslint-disable-next-line no-constant-condition\n            retryRequest: while (true) {\n                retryCount += 1;\n                response = undefined;\n                responseError = undefined;\n                try {\n                    logger.info(`Retry ${retryCount}: Attempting to send request`, request.requestId);\n                    response = await next(request);\n                    logger.info(`Retry ${retryCount}: Received a response from request`, request.requestId);\n                }\n                catch (e) {\n                    logger.error(`Retry ${retryCount}: Received an error from request`, request.requestId);\n                    // RestErrors are valid targets for the retry strategies.\n                    // If none of the retry strategies can work with them, they will be thrown later in this policy.\n                    // If the received error is not a RestError, it is immediately thrown.\n                    responseError = e;\n                    if (!e || responseError.name !== \"RestError\") {\n                        throw e;\n                    }\n                    response = responseError.response;\n                }\n                if ((_a = request.abortSignal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                    logger.error(`Retry ${retryCount}: Request aborted.`);\n                    const abortError = new AbortError();\n                    throw abortError;\n                }\n                if (retryCount >= ((_b = options.maxRetries) !== null && _b !== void 0 ? _b : DEFAULT_RETRY_POLICY_COUNT)) {\n                    logger.info(`Retry ${retryCount}: Maximum retries reached. Returning the last received response, or throwing the last received error.`);\n                    if (responseError) {\n                        throw responseError;\n                    }\n                    else if (response) {\n                        return response;\n                    }\n                    else {\n                        throw new Error(\"Maximum retries reached with no response or error to throw\");\n                    }\n                }\n                logger.info(`Retry ${retryCount}: Processing ${strategies.length} retry strategies.`);\n                strategiesLoop: for (const strategy of strategies) {\n                    const strategyLogger = strategy.logger || retryPolicyLogger;\n                    strategyLogger.info(`Retry ${retryCount}: Processing retry strategy ${strategy.name}.`);\n                    const modifiers = strategy.retry({\n                        retryCount,\n                        response,\n                        responseError,\n                    });\n                    if (modifiers.skipStrategy) {\n                        strategyLogger.info(`Retry ${retryCount}: Skipped.`);\n                        continue strategiesLoop;\n                    }\n                    const { errorToThrow, retryAfterInMs, redirectTo } = modifiers;\n                    if (errorToThrow) {\n                        strategyLogger.error(`Retry ${retryCount}: Retry strategy ${strategy.name} throws error:`, errorToThrow);\n                        throw errorToThrow;\n                    }\n                    if (retryAfterInMs || retryAfterInMs === 0) {\n                        strategyLogger.info(`Retry ${retryCount}: Retry strategy ${strategy.name} retries after ${retryAfterInMs}`);\n                        await delay(retryAfterInMs, undefined, { abortSignal: request.abortSignal });\n                        continue retryRequest;\n                    }\n                    if (redirectTo) {\n                        strategyLogger.info(`Retry ${retryCount}: Retry strategy ${strategy.name} redirects to ${redirectTo}`);\n                        request.url = redirectTo;\n                        continue retryRequest;\n                    }\n                }\n                if (responseError) {\n                    logger.info(`None of the retry strategies could work with the received error. Throwing it.`);\n                    throw responseError;\n                }\n                if (response) {\n                    logger.info(`None of the retry strategies could work with the received response. Returning it.`);\n                    return response;\n                }\n                // If all the retries skip and there's no response,\n                // we're still in the retry loop, so a new request will be sent\n                // until `maxRetries` is reached.\n            }\n        },\n    };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { exponentialRetryStrategy } from \"../retryStrategies/exponentialRetryStrategy.js\";\nimport { throttlingRetryStrategy } from \"../retryStrategies/throttlingRetryStrategy.js\";\nimport { retryPolicy } from \"./retryPolicy.js\";\nimport { DEFAULT_RETRY_POLICY_COUNT } from \"../constants.js\";\n/**\n * Name of the {@link defaultRetryPolicy}\n */\nexport const defaultRetryPolicyName = \"defaultRetryPolicy\";\n/**\n * A policy that retries according to three strategies:\n * - When the server sends a 429 response with a Retry-After header.\n * - When there are errors in the underlying transport layer (e.g. DNS lookup failures).\n * - Or otherwise if the outgoing request fails, it will retry with an exponentially increasing delay.\n */\nexport function defaultRetryPolicy(options = {}) {\n    var _a;\n    return {\n        name: defaultRetryPolicyName,\n        sendRequest: retryPolicy([throttlingRetryStrategy(), exponentialRetryStrategy(options)], {\n            maxRetries: (_a = options.maxRetries) !== null && _a !== void 0 ? _a : DEFAULT_RETRY_POLICY_COUNT,\n        }).sendRequest,\n    };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nfunction normalizeName(name) {\n    return name.toLowerCase();\n}\nfunction* headerIterator(map) {\n    for (const entry of map.values()) {\n        yield [entry.name, entry.value];\n    }\n}\nclass HttpHeadersImpl {\n    constructor(rawHeaders) {\n        this._headersMap = new Map();\n        if (rawHeaders) {\n            for (const headerName of Object.keys(rawHeaders)) {\n                this.set(headerName, rawHeaders[headerName]);\n            }\n        }\n    }\n    /**\n     * Set a header in this collection with the provided name and value. The name is\n     * case-insensitive.\n     * @param name - The name of the header to set. This value is case-insensitive.\n     * @param value - The value of the header to set.\n     */\n    set(name, value) {\n        this._headersMap.set(normalizeName(name), { name, value: String(value).trim() });\n    }\n    /**\n     * Get the header value for the provided header name, or undefined if no header exists in this\n     * collection with the provided name.\n     * @param name - The name of the header. This value is case-insensitive.\n     */\n    get(name) {\n        var _a;\n        return (_a = this._headersMap.get(normalizeName(name))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    /**\n     * Get whether or not this header collection contains a header entry for the provided header name.\n     * @param name - The name of the header to set. This value is case-insensitive.\n     */\n    has(name) {\n        return this._headersMap.has(normalizeName(name));\n    }\n    /**\n     * Remove the header with the provided headerName.\n     * @param name - The name of the header to remove.\n     */\n    delete(name) {\n        this._headersMap.delete(normalizeName(name));\n    }\n    /**\n     * Get the JSON object representation of this HTTP header collection.\n     */\n    toJSON(options = {}) {\n        const result = {};\n        if (options.preserveCase) {\n            for (const entry of this._headersMap.values()) {\n                result[entry.name] = entry.value;\n            }\n        }\n        else {\n            for (const [normalizedName, entry] of this._headersMap) {\n                result[normalizedName] = entry.value;\n            }\n        }\n        return result;\n    }\n    /**\n     * Get the string representation of this HTTP header collection.\n     */\n    toString() {\n        return JSON.stringify(this.toJSON({ preserveCase: true }));\n    }\n    /**\n     * Iterate over tuples of header [name, value] pairs.\n     */\n    [Symbol.iterator]() {\n        return headerIterator(this._headersMap);\n    }\n}\n/**\n * Creates an object that satisfies the `HttpHeaders` interface.\n * @param rawHeaders - A simple object representing initial headers\n */\nexport function createHttpHeaders(rawHeaders) {\n    return new HttpHeadersImpl(rawHeaders);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { stringToUint8Array } from \"@azure/core-util\";\nimport { createHttpHeaders } from \"../httpHeaders.js\";\n/**\n * The programmatic identifier of the formDataPolicy.\n */\nexport const formDataPolicyName = \"formDataPolicy\";\n/**\n * A policy that encodes FormData on the request into the body.\n */\nexport function formDataPolicy() {\n    return {\n        name: formDataPolicyName,\n        async sendRequest(request, next) {\n            if (request.formData) {\n                const contentType = request.headers.get(\"Content-Type\");\n                if (contentType && contentType.indexOf(\"application/x-www-form-urlencoded\") !== -1) {\n                    request.body = wwwFormUrlEncode(request.formData);\n                }\n                else {\n                    await prepareFormData(request.formData, request);\n                }\n                request.formData = undefined;\n            }\n            return next(request);\n        },\n    };\n}\nfunction wwwFormUrlEncode(formData) {\n    const urlSearchParams = new URLSearchParams();\n    for (const [key, value] of Object.entries(formData)) {\n        if (Array.isArray(value)) {\n            for (const subValue of value) {\n                urlSearchParams.append(key, subValue.toString());\n            }\n        }\n        else {\n            urlSearchParams.append(key, value.toString());\n        }\n    }\n    return urlSearchParams.toString();\n}\nasync function prepareFormData(formData, request) {\n    // validate content type (multipart/form-data)\n    const contentType = request.headers.get(\"Content-Type\");\n    if (contentType && !contentType.startsWith(\"multipart/form-data\")) {\n        // content type is specified and is not multipart/form-data. Exit.\n        return;\n    }\n    request.headers.set(\"Content-Type\", contentType !== null && contentType !== void 0 ? contentType : \"multipart/form-data\");\n    // set body to MultipartRequestBody using content from FormDataMap\n    const parts = [];\n    for (const [fieldName, values] of Object.entries(formData)) {\n        for (const value of Array.isArray(values) ? values : [values]) {\n            if (typeof value === \"string\") {\n                parts.push({\n                    headers: createHttpHeaders({\n                        \"Content-Disposition\": `form-data; name=\"${fieldName}\"`,\n                    }),\n                    body: stringToUint8Array(value, \"utf-8\"),\n                });\n            }\n            else if (value === undefined || value === null || typeof value !== \"object\") {\n                throw new Error(`Unexpected value for key ${fieldName}: ${value}. Value should be serialized to string first.`);\n            }\n            else {\n                // using || instead of ?? here since if value.name is empty we should create a file name\n                const fileName = value.name || \"blob\";\n                const headers = createHttpHeaders();\n                headers.set(\"Content-Disposition\", `form-data; name=\"${fieldName}\"; filename=\"${fileName}\"`);\n                // again, || is used since an empty value.type means the content type is unset\n                headers.set(\"Content-Type\", value.type || \"application/octet-stream\");\n                parts.push({\n                    headers,\n                    body: value,\n                });\n            }\n        }\n    }\n    request.multipartBody = { parts };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/*\n * NOTE: When moving this file, please update \"browser\" section in package.json\n */\nexport const proxyPolicyName = \"proxyPolicy\";\nconst errorMessage = \"proxyPolicy is not supported in browser environment\";\nexport function getDefaultProxySettings() {\n    throw new Error(errorMessage);\n}\n/**\n * proxyPolicy is not supported in the browser and attempting\n * to use it will raise an error.\n */\nexport function proxyPolicy() {\n    throw new Error(errorMessage);\n}\n/**\n * A function to reset the cached agents.\n * proxyPolicy is not supported in the browser and attempting\n * to use it will raise an error.\n * @internal\n */\nexport function resetCachedProxyAgents() {\n    throw new Error(errorMessage);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * The programmatic identifier of the setClientRequestIdPolicy.\n */\nexport const setClientRequestIdPolicyName = \"setClientRequestIdPolicy\";\n/**\n * Each PipelineRequest gets a unique id upon creation.\n * This policy passes that unique id along via an HTTP header to enable better\n * telemetry and tracing.\n * @param requestIdHeaderName - The name of the header to pass the request ID to.\n */\nexport function setClientRequestIdPolicy(requestIdHeaderName = \"x-ms-client-request-id\") {\n    return {\n        name: setClientRequestIdPolicyName,\n        async sendRequest(request, next) {\n            if (!request.headers.has(requestIdHeaderName)) {\n                request.headers.set(requestIdHeaderName, request.requestId);\n            }\n            return next(request);\n        },\n    };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Name of the TLS Policy\n */\nexport const tlsPolicyName = \"tlsPolicy\";\n/**\n * Gets a pipeline policy that adds the client certificate to the HttpClient agent for authentication.\n */\nexport function tlsPolicy(tlsSettings) {\n    return {\n        name: tlsPolicyName,\n        sendRequest: async (req, next) => {\n            // Users may define a request tlsSettings, honor those over the client level one\n            if (!req.tlsSettings) {\n                req.tlsSettings = tlsSettings;\n            }\n            return next(req);\n        },\n    };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/** @internal */\nexport const knownContextKeys = {\n    span: Symbol.for(\"@azure/core-tracing span\"),\n    namespace: Symbol.for(\"@azure/core-tracing namespace\"),\n};\n/**\n * Creates a new {@link TracingContext} with the given options.\n * @param options - A set of known keys that may be set on the context.\n * @returns A new {@link TracingContext} with the given options.\n *\n * @internal\n */\nexport function createTracingContext(options = {}) {\n    let context = new TracingContextImpl(options.parentContext);\n    if (options.span) {\n        context = context.setValue(knownContextKeys.span, options.span);\n    }\n    if (options.namespace) {\n        context = context.setValue(knownContextKeys.namespace, options.namespace);\n    }\n    return context;\n}\n/** @internal */\nexport class TracingContextImpl {\n    constructor(initialContext) {\n        this._contextMap =\n            initialContext instanceof TracingContextImpl\n                ? new Map(initialContext._contextMap)\n                : new Map();\n    }\n    setValue(key, value) {\n        const newContext = new TracingContextImpl(this);\n        newContext._contextMap.set(key, value);\n        return newContext;\n    }\n    getValue(key) {\n        return this._contextMap.get(key);\n    }\n    deleteValue(key) {\n        const newContext = new TracingContextImpl(this);\n        newContext._contextMap.delete(key);\n        return newContext;\n    }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Browser-only implementation of the module's state. The browser esm variant will not load the commonjs state, so we do not need to share state between the two.\n */\nexport const state = {\n    instrumenterImplementation: undefined,\n};\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { createTracingContext } from \"./tracingContext.js\";\nimport { state } from \"./state.js\";\nexport function createDefaultTracingSpan() {\n    return {\n        end: () => {\n            // noop\n        },\n        isRecording: () => false,\n        recordException: () => {\n            // noop\n        },\n        setAttribute: () => {\n            // noop\n        },\n        setStatus: () => {\n            // noop\n        },\n    };\n}\nexport function createDefaultInstrumenter() {\n    return {\n        createRequestHeaders: () => {\n            return {};\n        },\n        parseTraceparentHeader: () => {\n            return undefined;\n        },\n        startSpan: (_name, spanOptions) => {\n            return {\n                span: createDefaultTracingSpan(),\n                tracingContext: createTracingContext({ parentContext: spanOptions.tracingContext }),\n            };\n        },\n        withContext(_context, callback, ...callbackArgs) {\n            return callback(...callbackArgs);\n        },\n    };\n}\n/**\n * Extends the Azure SDK with support for a given instrumenter implementation.\n *\n * @param instrumenter - The instrumenter implementation to use.\n */\nexport function useInstrumenter(instrumenter) {\n    state.instrumenterImplementation = instrumenter;\n}\n/**\n * Gets the currently set instrumenter, a No-Op instrumenter by default.\n *\n * @returns The currently set instrumenter\n */\nexport function getInstrumenter() {\n    if (!state.instrumenterImplementation) {\n        state.instrumenterImplementation = createDefaultInstrumenter();\n    }\n    return state.instrumenterImplementation;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { getInstrumenter } from \"./instrumenter.js\";\nimport { knownContextKeys } from \"./tracingContext.js\";\n/**\n * Creates a new tracing client.\n *\n * @param options - Options used to configure the tracing client.\n * @returns - An instance of {@link TracingClient}.\n */\nexport function createTracingClient(options) {\n    const { namespace, packageName, packageVersion } = options;\n    function startSpan(name, operationOptions, spanOptions) {\n        var _a;\n        const startSpanResult = getInstrumenter().startSpan(name, Object.assign(Object.assign({}, spanOptions), { packageName: packageName, packageVersion: packageVersion, tracingContext: (_a = operationOptions === null || operationOptions === void 0 ? void 0 : operationOptions.tracingOptions) === null || _a === void 0 ? void 0 : _a.tracingContext }));\n        let tracingContext = startSpanResult.tracingContext;\n        const span = startSpanResult.span;\n        if (!tracingContext.getValue(knownContextKeys.namespace)) {\n            tracingContext = tracingContext.setValue(knownContextKeys.namespace, namespace);\n        }\n        span.setAttribute(\"az.namespace\", tracingContext.getValue(knownContextKeys.namespace));\n        const updatedOptions = Object.assign({}, operationOptions, {\n            tracingOptions: Object.assign(Object.assign({}, operationOptions === null || operationOptions === void 0 ? void 0 : operationOptions.tracingOptions), { tracingContext }),\n        });\n        return {\n            span,\n            updatedOptions,\n        };\n    }\n    async function withSpan(name, operationOptions, callback, spanOptions) {\n        const { span, updatedOptions } = startSpan(name, operationOptions, spanOptions);\n        try {\n            const result = await withContext(updatedOptions.tracingOptions.tracingContext, () => Promise.resolve(callback(updatedOptions, span)));\n            span.setStatus({ status: \"success\" });\n            return result;\n        }\n        catch (err) {\n            span.setStatus({ status: \"error\", error: err });\n            throw err;\n        }\n        finally {\n            span.end();\n        }\n    }\n    function withContext(context, callback, ...callbackArgs) {\n        return getInstrumenter().withContext(context, callback, ...callbackArgs);\n    }\n    /**\n     * Parses a traceparent header value into a span identifier.\n     *\n     * @param traceparentHeader - The traceparent header to parse.\n     * @returns An implementation-specific identifier for the span.\n     */\n    function parseTraceparentHeader(traceparentHeader) {\n        return getInstrumenter().parseTraceparentHeader(traceparentHeader);\n    }\n    /**\n     * Creates a set of request headers to propagate tracing information to a backend.\n     *\n     * @param tracingContext - The context containing the span to serialize.\n     * @returns The set of headers to add to a request.\n     */\n    function createRequestHeaders(tracingContext) {\n        return getInstrumenter().createRequestHeaders(tracingContext);\n    }\n    return {\n        startSpan,\n        withSpan,\n        withContext,\n        parseTraceparentHeader,\n        createRequestHeaders,\n    };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nexport const custom = {};\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { isError } from \"@azure/core-util\";\nimport { custom } from \"./util/inspect.js\";\nimport { Sanitizer } from \"./util/sanitizer.js\";\nconst errorSanitizer = new Sanitizer();\n/**\n * A custom error type for failed pipeline requests.\n */\nexport class RestError extends Error {\n    constructor(message, options = {}) {\n        super(message);\n        this.name = \"RestError\";\n        this.code = options.code;\n        this.statusCode = options.statusCode;\n        this.request = options.request;\n        this.response = options.response;\n        Object.setPrototypeOf(this, RestError.prototype);\n    }\n    /**\n     * Logging method for util.inspect in Node\n     */\n    [custom]() {\n        return `RestError: ${this.message} \\n ${errorSanitizer.sanitize(this)}`;\n    }\n}\n/**\n * Something went wrong when making the request.\n * This means the actual request failed for some reason,\n * such as a DNS issue or the connection being lost.\n */\nRestError.REQUEST_SEND_ERROR = \"REQUEST_SEND_ERROR\";\n/**\n * This means that parsing the response from the server failed.\n * It may have been malformed.\n */\nRestError.PARSE_ERROR = \"PARSE_ERROR\";\n/**\n * Typeguard for RestError\n * @param e - Something caught by a catch clause.\n */\nexport function isRestError(e) {\n    if (e instanceof RestError) {\n        return true;\n    }\n    return isError(e) && e.name === \"RestError\";\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { createTracingClient, } from \"@azure/core-tracing\";\nimport { SDK_VERSION } from \"../constants.js\";\nimport { getUserAgentValue } from \"../util/userAgent.js\";\nimport { logger } from \"../log.js\";\nimport { getErrorMessage, isError } from \"@azure/core-util\";\nimport { isRestError } from \"../restError.js\";\n/**\n * The programmatic identifier of the tracingPolicy.\n */\nexport const tracingPolicyName = \"tracingPolicy\";\n/**\n * A simple policy to create OpenTelemetry Spans for each request made by the pipeline\n * that has SpanOptions with a parent.\n * Requests made without a parent Span will not be recorded.\n * @param options - Options to configure the telemetry logged by the tracing policy.\n */\nexport function tracingPolicy(options = {}) {\n    const userAgent = getUserAgentValue(options.userAgentPrefix);\n    const tracingClient = tryCreateTracingClient();\n    return {\n        name: tracingPolicyName,\n        async sendRequest(request, next) {\n            var _a, _b;\n            if (!tracingClient || !((_a = request.tracingOptions) === null || _a === void 0 ? void 0 : _a.tracingContext)) {\n                return next(request);\n            }\n            const { span, tracingContext } = (_b = tryCreateSpan(tracingClient, request, userAgent)) !== null && _b !== void 0 ? _b : {};\n            if (!span || !tracingContext) {\n                return next(request);\n            }\n            try {\n                const response = await tracingClient.withContext(tracingContext, next, request);\n                tryProcessResponse(span, response);\n                return response;\n            }\n            catch (err) {\n                tryProcessError(span, err);\n                throw err;\n            }\n        },\n    };\n}\nfunction tryCreateTracingClient() {\n    try {\n        return createTracingClient({\n            namespace: \"\",\n            packageName: \"@azure/core-rest-pipeline\",\n            packageVersion: SDK_VERSION,\n        });\n    }\n    catch (e) {\n        logger.warning(`Error when creating the TracingClient: ${getErrorMessage(e)}`);\n        return undefined;\n    }\n}\nfunction tryCreateSpan(tracingClient, request, userAgent) {\n    try {\n        // As per spec, we do not need to differentiate between HTTP and HTTPS in span name.\n        const { span, updatedOptions } = tracingClient.startSpan(`HTTP ${request.method}`, { tracingOptions: request.tracingOptions }, {\n            spanKind: \"client\",\n            spanAttributes: {\n                \"http.method\": request.method,\n                \"http.url\": request.url,\n                requestId: request.requestId,\n            },\n        });\n        // If the span is not recording, don't do any more work.\n        if (!span.isRecording()) {\n            span.end();\n            return undefined;\n        }\n        if (userAgent) {\n            span.setAttribute(\"http.user_agent\", userAgent);\n        }\n        // set headers\n        const headers = tracingClient.createRequestHeaders(updatedOptions.tracingOptions.tracingContext);\n        for (const [key, value] of Object.entries(headers)) {\n            request.headers.set(key, value);\n        }\n        return { span, tracingContext: updatedOptions.tracingOptions.tracingContext };\n    }\n    catch (e) {\n        logger.warning(`Skipping creating a tracing span due to an error: ${getErrorMessage(e)}`);\n        return undefined;\n    }\n}\nfunction tryProcessError(span, error) {\n    try {\n        span.setStatus({\n            status: \"error\",\n            error: isError(error) ? error : undefined,\n        });\n        if (isRestError(error) && error.statusCode) {\n            span.setAttribute(\"http.status_code\", error.statusCode);\n        }\n        span.end();\n    }\n    catch (e) {\n        logger.warning(`Skipping tracing span processing due to an error: ${getErrorMessage(e)}`);\n    }\n}\nfunction tryProcessResponse(span, response) {\n    try {\n        span.setAttribute(\"http.status_code\", response.status);\n        const serviceRequestId = response.headers.get(\"x-ms-request-id\");\n        if (serviceRequestId) {\n            span.setAttribute(\"serviceRequestId\", serviceRequestId);\n        }\n        span.setStatus({\n            status: \"success\",\n        });\n        span.end();\n    }\n    catch (e) {\n        logger.warning(`Skipping tracing span processing due to an error: ${getErrorMessage(e)}`);\n    }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { logPolicy } from \"./policies/logPolicy.js\";\nimport { createEmptyPipeline } from \"./pipeline.js\";\nimport { redirectPolicy } from \"./policies/redirectPolicy.js\";\nimport { userAgentPolicy } from \"./policies/userAgentPolicy.js\";\nimport { multipartPolicy, multipartPolicyName } from \"./policies/multipartPolicy.js\";\nimport { decompressResponsePolicy } from \"./policies/decompressResponsePolicy.js\";\nimport { defaultRetryPolicy } from \"./policies/defaultRetryPolicy.js\";\nimport { formDataPolicy } from \"./policies/formDataPolicy.js\";\nimport { isNode } from \"@azure/core-util\";\nimport { proxyPolicy } from \"./policies/proxyPolicy.js\";\nimport { setClientRequestIdPolicy } from \"./policies/setClientRequestIdPolicy.js\";\nimport { tlsPolicy } from \"./policies/tlsPolicy.js\";\nimport { tracingPolicy } from \"./policies/tracingPolicy.js\";\n/**\n * Create a new pipeline with a default set of customizable policies.\n * @param options - Options to configure a custom pipeline.\n */\nexport function createPipelineFromOptions(options) {\n    var _a;\n    const pipeline = createEmptyPipeline();\n    if (isNode) {\n        if (options.tlsOptions) {\n            pipeline.addPolicy(tlsPolicy(options.tlsOptions));\n        }\n        pipeline.addPolicy(proxyPolicy(options.proxyOptions));\n        pipeline.addPolicy(decompressResponsePolicy());\n    }\n    pipeline.addPolicy(formDataPolicy(), { beforePolicies: [multipartPolicyName] });\n    pipeline.addPolicy(userAgentPolicy(options.userAgentOptions));\n    pipeline.addPolicy(setClientRequestIdPolicy((_a = options.telemetryOptions) === null || _a === void 0 ? void 0 : _a.clientRequestIdHeaderName));\n    // The multipart policy is added after policies with no phase, so that\n    // policies can be added between it and formDataPolicy to modify\n    // properties (e.g., making the boundary constant in recorded tests).\n    pipeline.addPolicy(multipartPolicy(), { afterPhase: \"Deserialize\" });\n    pipeline.addPolicy(defaultRetryPolicy(options.retryOptions), { phase: \"Retry\" });\n    pipeline.addPolicy(tracingPolicy(options.userAgentOptions), { afterPhase: \"Retry\" });\n    if (isNode) {\n        // Both XHR and Fetch expect to handle redirects automatically,\n        // so only include this policy when we're in Node.\n        pipeline.addPolicy(redirectPolicy(options.redirectOptions), { afterPhase: \"Retry\" });\n    }\n    pipeline.addPolicy(logPolicy(options.loggingOptions), { afterPhase: \"Sign\" });\n    return pipeline;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { AbortError } from \"@azure/abort-controller\";\nimport { RestError } from \"./restError.js\";\nimport { createHttpHeaders } from \"./httpHeaders.js\";\nimport { isNodeReadableStream, isWebReadableStream } from \"./util/typeGuards.js\";\n/**\n * Checks if the body is a Blob or Blob-like\n */\nfunction isBlob(body) {\n    // File objects count as a type of Blob, so we want to use instanceof explicitly\n    return (typeof Blob === \"function\" || typeof Blob === \"object\") && body instanceof Blob;\n}\n/**\n * A HttpClient implementation that uses window.fetch to send HTTP requests.\n * @internal\n */\nclass FetchHttpClient {\n    /**\n     * Makes a request over an underlying transport layer and returns the response.\n     * @param request - The request to be made.\n     */\n    async sendRequest(request) {\n        const url = new URL(request.url);\n        const isInsecure = url.protocol !== \"https:\";\n        if (isInsecure && !request.allowInsecureConnection) {\n            throw new Error(`Cannot connect to ${request.url} while allowInsecureConnection is false.`);\n        }\n        if (request.proxySettings) {\n            throw new Error(\"HTTP proxy is not supported in browser environment\");\n        }\n        try {\n            return await makeRequest(request);\n        }\n        catch (e) {\n            throw getError(e, request);\n        }\n    }\n}\n/**\n * Sends a request\n */\nasync function makeRequest(request) {\n    const { abortController, abortControllerCleanup } = setupAbortSignal(request);\n    try {\n        const headers = buildFetchHeaders(request.headers);\n        const { streaming, body: requestBody } = buildRequestBody(request);\n        const requestInit = Object.assign(Object.assign({ body: requestBody, method: request.method, headers: headers, signal: abortController.signal }, (\"credentials\" in Request.prototype\n            ? { credentials: request.withCredentials ? \"include\" : \"same-origin\" }\n            : {})), (\"cache\" in Request.prototype ? { cache: \"no-store\" } : {}));\n        // According to https://fetch.spec.whatwg.org/#fetch-method,\n        // init.duplex must be set when body is a ReadableStream object.\n        // currently \"half\" is the only valid value.\n        if (streaming) {\n            requestInit.duplex = \"half\";\n        }\n        /**\n         * Developers of the future:\n         * Do not set redirect: \"manual\" as part\n         * of request options.\n         * It will not work as you expect.\n         */\n        const response = await fetch(request.url, requestInit);\n        // If we're uploading a blob, we need to fire the progress event manually\n        if (isBlob(request.body) && request.onUploadProgress) {\n            request.onUploadProgress({ loadedBytes: request.body.size });\n        }\n        return buildPipelineResponse(response, request, abortControllerCleanup);\n    }\n    catch (e) {\n        abortControllerCleanup === null || abortControllerCleanup === void 0 ? void 0 : abortControllerCleanup();\n        throw e;\n    }\n}\n/**\n * Creates a pipeline response from a Fetch response;\n */\nasync function buildPipelineResponse(httpResponse, request, abortControllerCleanup) {\n    var _a, _b;\n    const headers = buildPipelineHeaders(httpResponse);\n    const response = {\n        request,\n        headers,\n        status: httpResponse.status,\n    };\n    const bodyStream = isWebReadableStream(httpResponse.body)\n        ? buildBodyStream(httpResponse.body, {\n            onProgress: request.onDownloadProgress,\n            onEnd: abortControllerCleanup,\n        })\n        : httpResponse.body;\n    if (\n    // Value of POSITIVE_INFINITY in streamResponseStatusCodes is considered as any status code\n    ((_a = request.streamResponseStatusCodes) === null || _a === void 0 ? void 0 : _a.has(Number.POSITIVE_INFINITY)) ||\n        ((_b = request.streamResponseStatusCodes) === null || _b === void 0 ? void 0 : _b.has(response.status))) {\n        if (request.enableBrowserStreams) {\n            response.browserStreamBody = bodyStream !== null && bodyStream !== void 0 ? bodyStream : undefined;\n        }\n        else {\n            const responseStream = new Response(bodyStream);\n            response.blobBody = responseStream.blob();\n            abortControllerCleanup === null || abortControllerCleanup === void 0 ? void 0 : abortControllerCleanup();\n        }\n    }\n    else {\n        const responseStream = new Response(bodyStream);\n        response.bodyAsText = await responseStream.text();\n        abortControllerCleanup === null || abortControllerCleanup === void 0 ? void 0 : abortControllerCleanup();\n    }\n    return response;\n}\nfunction setupAbortSignal(request) {\n    const abortController = new AbortController();\n    // Cleanup function\n    let abortControllerCleanup;\n    /**\n     * Attach an abort listener to the request\n     */\n    let abortListener;\n    if (request.abortSignal) {\n        if (request.abortSignal.aborted) {\n            throw new AbortError(\"The operation was aborted.\");\n        }\n        abortListener = (event) => {\n            if (event.type === \"abort\") {\n                abortController.abort();\n            }\n        };\n        request.abortSignal.addEventListener(\"abort\", abortListener);\n        abortControllerCleanup = () => {\n            var _a;\n            if (abortListener) {\n                (_a = request.abortSignal) === null || _a === void 0 ? void 0 : _a.removeEventListener(\"abort\", abortListener);\n            }\n        };\n    }\n    // If a timeout was passed, call the abort signal once the time elapses\n    if (request.timeout > 0) {\n        setTimeout(() => {\n            abortController.abort();\n        }, request.timeout);\n    }\n    return { abortController, abortControllerCleanup };\n}\n/**\n * Gets the specific error\n */\n// eslint-disable-next-line @azure/azure-sdk/ts-use-interface-parameters\nfunction getError(e, request) {\n    var _a;\n    if (e && (e === null || e === void 0 ? void 0 : e.name) === \"AbortError\") {\n        return e;\n    }\n    else {\n        return new RestError(`Error sending request: ${e.message}`, {\n            code: (_a = e === null || e === void 0 ? void 0 : e.code) !== null && _a !== void 0 ? _a : RestError.REQUEST_SEND_ERROR,\n            request,\n        });\n    }\n}\n/**\n * Converts PipelineRequest headers to Fetch headers\n */\nfunction buildFetchHeaders(pipelineHeaders) {\n    const headers = new Headers();\n    for (const [name, value] of pipelineHeaders) {\n        headers.append(name, value);\n    }\n    return headers;\n}\nfunction buildPipelineHeaders(httpResponse) {\n    const responseHeaders = createHttpHeaders();\n    for (const [name, value] of httpResponse.headers) {\n        responseHeaders.set(name, value);\n    }\n    return responseHeaders;\n}\nfunction buildRequestBody(request) {\n    const body = typeof request.body === \"function\" ? request.body() : request.body;\n    if (isNodeReadableStream(body)) {\n        throw new Error(\"Node streams are not supported in browser environment.\");\n    }\n    return isWebReadableStream(body)\n        ? { streaming: true, body: buildBodyStream(body, { onProgress: request.onUploadProgress }) }\n        : { streaming: false, body };\n}\n/**\n * Reads the request/response original stream and stream it through a new\n * ReadableStream, this is done to be able to report progress in a way that\n * all modern browsers support. TransformStreams would be an alternative,\n * however they are not yet supported by all browsers i.e Firefox\n */\nfunction buildBodyStream(readableStream, options = {}) {\n    let loadedBytes = 0;\n    const { onProgress, onEnd } = options;\n    // If the current browser supports pipeThrough we use a TransformStream\n    // to report progress\n    if (isTransformStreamSupported(readableStream)) {\n        return readableStream.pipeThrough(new TransformStream({\n            transform(chunk, controller) {\n                if (chunk === null) {\n                    controller.terminate();\n                    return;\n                }\n                controller.enqueue(chunk);\n                loadedBytes += chunk.length;\n                if (onProgress) {\n                    onProgress({ loadedBytes });\n                }\n            },\n            flush() {\n                onEnd === null || onEnd === void 0 ? void 0 : onEnd();\n            },\n        }));\n    }\n    else {\n        // If we can't use transform streams, wrap the original stream in a new readable stream\n        // and use pull to enqueue each chunk and report progress.\n        const reader = readableStream.getReader();\n        return new ReadableStream({\n            async pull(controller) {\n                var _a;\n                const { done, value } = await reader.read();\n                // When no more data needs to be consumed, break the reading\n                if (done || !value) {\n                    onEnd === null || onEnd === void 0 ? void 0 : onEnd();\n                    // Close the stream\n                    controller.close();\n                    reader.releaseLock();\n                    return;\n                }\n                loadedBytes += (_a = value === null || value === void 0 ? void 0 : value.length) !== null && _a !== void 0 ? _a : 0;\n                // Enqueue the next data chunk into our target stream\n                controller.enqueue(value);\n                if (onProgress) {\n                    onProgress({ loadedBytes });\n                }\n            },\n            cancel(reason) {\n                onEnd === null || onEnd === void 0 ? void 0 : onEnd();\n                return reader.cancel(reason);\n            },\n        });\n    }\n}\n/**\n * Create a new HttpClient instance for the browser environment.\n * @internal\n */\nexport function createFetchHttpClient() {\n    return new FetchHttpClient();\n}\nfunction isTransformStreamSupported(readableStream) {\n    return readableStream.pipeThrough !== undefined && self.TransformStream !== undefined;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { createFetchHttpClient } from \"./fetchHttpClient.js\";\n/**\n * Create the correct HttpClient for the current environment.\n */\nexport function createDefaultHttpClient() {\n    return createFetchHttpClient();\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { createHttpHeaders } from \"./httpHeaders.js\";\nimport { randomUUID } from \"@azure/core-util\";\nclass PipelineRequestImpl {\n    constructor(options) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        this.url = options.url;\n        this.body = options.body;\n        this.headers = (_a = options.headers) !== null && _a !== void 0 ? _a : createHttpHeaders();\n        this.method = (_b = options.method) !== null && _b !== void 0 ? _b : \"GET\";\n        this.timeout = (_c = options.timeout) !== null && _c !== void 0 ? _c : 0;\n        this.multipartBody = options.multipartBody;\n        this.formData = options.formData;\n        this.disableKeepAlive = (_d = options.disableKeepAlive) !== null && _d !== void 0 ? _d : false;\n        this.proxySettings = options.proxySettings;\n        this.streamResponseStatusCodes = options.streamResponseStatusCodes;\n        this.withCredentials = (_e = options.withCredentials) !== null && _e !== void 0 ? _e : false;\n        this.abortSignal = options.abortSignal;\n        this.tracingOptions = options.tracingOptions;\n        this.onUploadProgress = options.onUploadProgress;\n        this.onDownloadProgress = options.onDownloadProgress;\n        this.requestId = options.requestId || randomUUID();\n        this.allowInsecureConnection = (_f = options.allowInsecureConnection) !== null && _f !== void 0 ? _f : false;\n        this.enableBrowserStreams = (_g = options.enableBrowserStreams) !== null && _g !== void 0 ? _g : false;\n    }\n}\n/**\n * Creates a new pipeline request with the given options.\n * This method is to allow for the easy setting of default values and not required.\n * @param options - The options to create the request with.\n */\nexport function createPipelineRequest(options) {\n    return new PipelineRequestImpl(options);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { delay } from \"./helpers.js\";\n// Default options for the cycler if none are provided\nexport const DEFAULT_CYCLER_OPTIONS = {\n    forcedRefreshWindowInMs: 1000, // Force waiting for a refresh 1s before the token expires\n    retryIntervalInMs: 3000, // Allow refresh attempts every 3s\n    refreshWindowInMs: 1000 * 60 * 2, // Start refreshing 2m before expiry\n};\n/**\n * Converts an an unreliable access token getter (which may resolve with null)\n * into an AccessTokenGetter by retrying the unreliable getter in a regular\n * interval.\n *\n * @param getAccessToken - A function that produces a promise of an access token that may fail by returning null.\n * @param retryIntervalInMs - The time (in milliseconds) to wait between retry attempts.\n * @param refreshTimeout - The timestamp after which the refresh attempt will fail, throwing an exception.\n * @returns - A promise that, if it resolves, will resolve with an access token.\n */\nasync function beginRefresh(getAccessToken, retryIntervalInMs, refreshTimeout) {\n    // This wrapper handles exceptions gracefully as long as we haven't exceeded\n    // the timeout.\n    async function tryGetAccessToken() {\n        if (Date.now() < refreshTimeout) {\n            try {\n                return await getAccessToken();\n            }\n            catch (_a) {\n                return null;\n            }\n        }\n        else {\n            const finalToken = await getAccessToken();\n            // Timeout is up, so throw if it's still null\n            if (finalToken === null) {\n                throw new Error(\"Failed to refresh access token.\");\n            }\n            return finalToken;\n        }\n    }\n    let token = await tryGetAccessToken();\n    while (token === null) {\n        await delay(retryIntervalInMs);\n        token = await tryGetAccessToken();\n    }\n    return token;\n}\n/**\n * Creates a token cycler from a credential, scopes, and optional settings.\n *\n * A token cycler represents a way to reliably retrieve a valid access token\n * from a TokenCredential. It will handle initializing the token, refreshing it\n * when it nears expiration, and synchronizes refresh attempts to avoid\n * concurrency hazards.\n *\n * @param credential - the underlying TokenCredential that provides the access\n * token\n * @param tokenCyclerOptions - optionally override default settings for the cycler\n *\n * @returns - a function that reliably produces a valid access token\n */\nexport function createTokenCycler(credential, tokenCyclerOptions) {\n    let refreshWorker = null;\n    let token = null;\n    let tenantId;\n    const options = Object.assign(Object.assign({}, DEFAULT_CYCLER_OPTIONS), tokenCyclerOptions);\n    /**\n     * This little holder defines several predicates that we use to construct\n     * the rules of refreshing the token.\n     */\n    const cycler = {\n        /**\n         * Produces true if a refresh job is currently in progress.\n         */\n        get isRefreshing() {\n            return refreshWorker !== null;\n        },\n        /**\n         * Produces true if the cycler SHOULD refresh (we are within the refresh\n         * window and not already refreshing)\n         */\n        get shouldRefresh() {\n            var _a;\n            return (!cycler.isRefreshing &&\n                ((_a = token === null || token === void 0 ? void 0 : token.expiresOnTimestamp) !== null && _a !== void 0 ? _a : 0) - options.refreshWindowInMs < Date.now());\n        },\n        /**\n         * Produces true if the cycler MUST refresh (null or nearly-expired\n         * token).\n         */\n        get mustRefresh() {\n            return (token === null || token.expiresOnTimestamp - options.forcedRefreshWindowInMs < Date.now());\n        },\n    };\n    /**\n     * Starts a refresh job or returns the existing job if one is already\n     * running.\n     */\n    function refresh(scopes, getTokenOptions) {\n        var _a;\n        if (!cycler.isRefreshing) {\n            // We bind `scopes` here to avoid passing it around a lot\n            const tryGetAccessToken = () => credential.getToken(scopes, getTokenOptions);\n            // Take advantage of promise chaining to insert an assignment to `token`\n            // before the refresh can be considered done.\n            refreshWorker = beginRefresh(tryGetAccessToken, options.retryIntervalInMs, \n            // If we don't have a token, then we should timeout immediately\n            (_a = token === null || token === void 0 ? void 0 : token.expiresOnTimestamp) !== null && _a !== void 0 ? _a : Date.now())\n                .then((_token) => {\n                refreshWorker = null;\n                token = _token;\n                tenantId = getTokenOptions.tenantId;\n                return token;\n            })\n                .catch((reason) => {\n                // We also should reset the refresher if we enter a failed state.  All\n                // existing awaiters will throw, but subsequent requests will start a\n                // new retry chain.\n                refreshWorker = null;\n                token = null;\n                tenantId = undefined;\n                throw reason;\n            });\n        }\n        return refreshWorker;\n    }\n    return async (scopes, tokenOptions) => {\n        //\n        // Simple rules:\n        // - If we MUST refresh, then return the refresh task, blocking\n        //   the pipeline until a token is available.\n        // - If we SHOULD refresh, then run refresh but don't return it\n        //   (we can still use the cached token).\n        // - Return the token, since it's fine if we didn't return in\n        //   step 1.\n        //\n        // If the tenantId passed in token options is different to the one we have\n        // Or if we are in claim challenge and the token was rejected and a new access token need to be issued, we need to\n        // refresh the token with the new tenantId or token.\n        const mustRefresh = tenantId !== tokenOptions.tenantId || Boolean(tokenOptions.claims) || cycler.mustRefresh;\n        if (mustRefresh)\n            return refresh(scopes, tokenOptions);\n        if (cycler.shouldRefresh) {\n            refresh(scopes, tokenOptions);\n        }\n        return token;\n    };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { createTokenCycler } from \"../util/tokenCycler.js\";\nimport { logger as coreLogger } from \"../log.js\";\n/**\n * The programmatic identifier of the bearerTokenAuthenticationPolicy.\n */\nexport const bearerTokenAuthenticationPolicyName = \"bearerTokenAuthenticationPolicy\";\n/**\n * Default authorize request handler\n */\nasync function defaultAuthorizeRequest(options) {\n    const { scopes, getAccessToken, request } = options;\n    const getTokenOptions = {\n        abortSignal: request.abortSignal,\n        tracingOptions: request.tracingOptions,\n    };\n    const accessToken = await getAccessToken(scopes, getTokenOptions);\n    if (accessToken) {\n        options.request.headers.set(\"Authorization\", `Bearer ${accessToken.token}`);\n    }\n}\n/**\n * We will retrieve the challenge only if the response status code was 401,\n * and if the response contained the header \"WWW-Authenticate\" with a non-empty value.\n */\nfunction getChallenge(response) {\n    const challenge = response.headers.get(\"WWW-Authenticate\");\n    if (response.status === 401 && challenge) {\n        return challenge;\n    }\n    return;\n}\n/**\n * A policy that can request a token from a TokenCredential implementation and\n * then apply it to the Authorization header of a request as a Bearer token.\n */\nexport function bearerTokenAuthenticationPolicy(options) {\n    var _a;\n    const { credential, scopes, challengeCallbacks } = options;\n    const logger = options.logger || coreLogger;\n    const callbacks = Object.assign({ authorizeRequest: (_a = challengeCallbacks === null || challengeCallbacks === void 0 ? void 0 : challengeCallbacks.authorizeRequest) !== null && _a !== void 0 ? _a : defaultAuthorizeRequest, authorizeRequestOnChallenge: challengeCallbacks === null || challengeCallbacks === void 0 ? void 0 : challengeCallbacks.authorizeRequestOnChallenge }, challengeCallbacks);\n    // This function encapsulates the entire process of reliably retrieving the token\n    // The options are left out of the public API until there's demand to configure this.\n    // Remember to extend `BearerTokenAuthenticationPolicyOptions` with `TokenCyclerOptions`\n    // in order to pass through the `options` object.\n    const getAccessToken = credential\n        ? createTokenCycler(credential /* , options */)\n        : () => Promise.resolve(null);\n    return {\n        name: bearerTokenAuthenticationPolicyName,\n        /**\n         * If there's no challenge parameter:\n         * - It will try to retrieve the token using the cache, or the credential's getToken.\n         * - Then it will try the next policy with or without the retrieved token.\n         *\n         * It uses the challenge parameters to:\n         * - Skip a first attempt to get the token from the credential if there's no cached token,\n         *   since it expects the token to be retrievable only after the challenge.\n         * - Prepare the outgoing request if the `prepareRequest` method has been provided.\n         * - Send an initial request to receive the challenge if it fails.\n         * - Process a challenge if the response contains it.\n         * - Retrieve a token with the challenge information, then re-send the request.\n         */\n        async sendRequest(request, next) {\n            if (!request.url.toLowerCase().startsWith(\"https://\")) {\n                throw new Error(\"Bearer token authentication is not permitted for non-TLS protected (non-https) URLs.\");\n            }\n            await callbacks.authorizeRequest({\n                scopes: Array.isArray(scopes) ? scopes : [scopes],\n                request,\n                getAccessToken,\n                logger,\n            });\n            let response;\n            let error;\n            try {\n                response = await next(request);\n            }\n            catch (err) {\n                error = err;\n                response = err.response;\n            }\n            if (callbacks.authorizeRequestOnChallenge &&\n                (response === null || response === void 0 ? void 0 : response.status) === 401 &&\n                getChallenge(response)) {\n                // processes challenge\n                const shouldSendRequest = await callbacks.authorizeRequestOnChallenge({\n                    scopes: Array.isArray(scopes) ? scopes : [scopes],\n                    request,\n                    response,\n                    getAccessToken,\n                    logger,\n                });\n                if (shouldSendRequest) {\n                    return next(request);\n                }\n            }\n            if (error) {\n                throw error;\n            }\n            else {\n                return response;\n            }\n        },\n    };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nexport const apiVersionPolicyName = \"ApiVersionPolicy\";\n/**\n * Creates a policy that sets the apiVersion as a query parameter on every request\n * @param options - Client options\n * @returns Pipeline policy that sets the apiVersion as a query parameter on every request\n */\nexport function apiVersionPolicy(options) {\n    return {\n        name: apiVersionPolicyName,\n        sendRequest: (req, next) => {\n            // Use the apiVesion defined in request url directly\n            // Append one if there is no apiVesion and we have one at client options\n            const url = new URL(req.url);\n            if (!url.searchParams.get(\"api-version\") && options.apiVersion) {\n                req.url = `${req.url}${Array.from(url.searchParams.keys()).length > 0 ? \"&\" : \"?\"}api-version=${options.apiVersion}`;\n            }\n            return next(req);\n        },\n    };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * The programmatic identifier of the bearerTokenAuthenticationPolicy.\n */\nexport const keyCredentialAuthenticationPolicyName = \"keyCredentialAuthenticationPolicy\";\nexport function keyCredentialAuthenticationPolicy(credential, apiKeyHeaderName) {\n    return {\n        name: keyCredentialAuthenticationPolicyName,\n        async sendRequest(request, next) {\n            request.headers.set(apiKeyHeaderName, credential.key);\n            return next(request);\n        },\n    };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { bearerTokenAuthenticationPolicy, createDefaultHttpClient, createPipelineFromOptions, } from \"@azure/core-rest-pipeline\";\nimport { isTokenCredential } from \"@azure/core-auth\";\nimport { apiVersionPolicy } from \"./apiVersionPolicy.js\";\nimport { keyCredentialAuthenticationPolicy } from \"./keyCredentialAuthenticationPolicy.js\";\nlet cachedHttpClient;\n/**\n * Adds a credential policy to the pipeline if a credential is provided. If none is provided, no policy is added.\n */\nexport function addCredentialPipelinePolicy(pipeline, endpoint, options = {}) {\n    var _a, _b, _c, _d;\n    const { credential, clientOptions } = options;\n    if (!credential) {\n        return;\n    }\n    if (isTokenCredential(credential)) {\n        const tokenPolicy = bearerTokenAuthenticationPolicy({\n            credential,\n            scopes: (_b = (_a = clientOptions === null || clientOptions === void 0 ? void 0 : clientOptions.credentials) === null || _a === void 0 ? void 0 : _a.scopes) !== null && _b !== void 0 ? _b : `${endpoint}/.default`,\n        });\n        pipeline.addPolicy(tokenPolicy);\n    }\n    else if (isKeyCredential(credential)) {\n        if (!((_c = clientOptions === null || clientOptions === void 0 ? void 0 : clientOptions.credentials) === null || _c === void 0 ? void 0 : _c.apiKeyHeaderName)) {\n            throw new Error(`Missing API Key Header Name`);\n        }\n        const keyPolicy = keyCredentialAuthenticationPolicy(credential, (_d = clientOptions === null || clientOptions === void 0 ? void 0 : clientOptions.credentials) === null || _d === void 0 ? void 0 : _d.apiKeyHeaderName);\n        pipeline.addPolicy(keyPolicy);\n    }\n}\n/**\n * Creates a default rest pipeline to re-use accross Rest Level Clients\n */\nexport function createDefaultPipeline(endpoint, credential, options = {}) {\n    const pipeline = createPipelineFromOptions(options);\n    pipeline.addPolicy(apiVersionPolicy(options));\n    addCredentialPipelinePolicy(pipeline, endpoint, { credential, clientOptions: options });\n    return pipeline;\n}\nfunction isKeyCredential(credential) {\n    return credential.key !== undefined;\n}\nexport function getCachedDefaultHttpsClient() {\n    if (!cachedHttpClient) {\n        cachedHttpClient = createDefaultHttpClient();\n    }\n    return cachedHttpClient;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Helper function to convert OperationOptions to RequestParameters\n * @param options - the options that are used by Modular layer to send the request\n * @returns the result of the conversion in RequestParameters of RLC layer\n */\nexport function operationOptionsToRequestParameters(options) {\n    var _a, _b, _c, _d, _e, _f;\n    return {\n        allowInsecureConnection: (_a = options.requestOptions) === null || _a === void 0 ? void 0 : _a.allowInsecureConnection,\n        timeout: (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.timeout,\n        skipUrlEncoding: (_c = options.requestOptions) === null || _c === void 0 ? void 0 : _c.skipUrlEncoding,\n        abortSignal: options.abortSignal,\n        onUploadProgress: (_d = options.requestOptions) === null || _d === void 0 ? void 0 : _d.onUploadProgress,\n        onDownloadProgress: (_e = options.requestOptions) === null || _e === void 0 ? void 0 : _e.onDownloadProgress,\n        tracingOptions: options.tracingOptions,\n        headers: Object.assign({}, (_f = options.requestOptions) === null || _f === void 0 ? void 0 : _f.headers),\n        onResponse: options.onResponse,\n    };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Checks if the body is a ReadableStream supported by browsers\n * @internal\n */\nexport function isReadableStream(body) {\n    return Boolean(body &&\n        typeof body.getReader === \"function\" &&\n        typeof body.tee === \"function\");\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { RestError, createFile, createHttpHeaders, createPipelineRequest, } from \"@azure/core-rest-pipeline\";\nimport { getCachedDefaultHttpsClient } from \"./clientHelpers.js\";\nimport { isReadableStream } from \"./helpers/isReadableStream.js\";\n/**\n * Helper function to send request used by the client\n * @param method - method to use to send the request\n * @param url - url to send the request to\n * @param pipeline - pipeline with the policies to run when sending the request\n * @param options - request options\n * @param customHttpClient - a custom HttpClient to use when making the request\n * @returns returns and HttpResponse\n */\nexport async function sendRequest(method, url, pipeline, options = {}, customHttpClient) {\n    var _a;\n    const httpClient = customHttpClient !== null && customHttpClient !== void 0 ? customHttpClient : getCachedDefaultHttpsClient();\n    const request = buildPipelineRequest(method, url, options);\n    const response = await pipeline.sendRequest(httpClient, request);\n    const headers = response.headers.toJSON();\n    const stream = (_a = response.readableStreamBody) !== null && _a !== void 0 ? _a : response.browserStreamBody;\n    const parsedBody = options.responseAsStream || stream !== undefined ? undefined : getResponseBody(response);\n    const body = stream !== null && stream !== void 0 ? stream : parsedBody;\n    if (options === null || options === void 0 ? void 0 : options.onResponse) {\n        options.onResponse(Object.assign(Object.assign({}, response), { request, rawHeaders: headers, parsedBody }));\n    }\n    return {\n        request,\n        headers,\n        status: `${response.status}`,\n        body,\n    };\n}\n/**\n * Function to determine the request content type\n * @param options - request options InternalRequestParameters\n * @returns returns the content-type\n */\nfunction getRequestContentType(options = {}) {\n    var _a, _b, _c;\n    return ((_c = (_a = options.contentType) !== null && _a !== void 0 ? _a : (_b = options.headers) === null || _b === void 0 ? void 0 : _b[\"content-type\"]) !== null && _c !== void 0 ? _c : getContentType(options.body));\n}\n/**\n * Function to determine the content-type of a body\n * this is used if an explicit content-type is not provided\n * @param body - body in the request\n * @returns returns the content-type\n */\nfunction getContentType(body) {\n    if (ArrayBuffer.isView(body)) {\n        return \"application/octet-stream\";\n    }\n    if (typeof body === \"string\") {\n        try {\n            JSON.parse(body);\n            return \"application/json; charset=UTF-8\";\n        }\n        catch (error) {\n            // If we fail to parse the body, it is not json\n            return undefined;\n        }\n    }\n    // By default return json\n    return \"application/json; charset=UTF-8\";\n}\nfunction buildPipelineRequest(method, url, options = {}) {\n    var _a, _b, _c;\n    const requestContentType = getRequestContentType(options);\n    const { body, formData } = getRequestBody(options.body, requestContentType);\n    const hasContent = body !== undefined || formData !== undefined;\n    const headers = createHttpHeaders(Object.assign(Object.assign(Object.assign({}, (options.headers ? options.headers : {})), { accept: (_c = (_a = options.accept) !== null && _a !== void 0 ? _a : (_b = options.headers) === null || _b === void 0 ? void 0 : _b.accept) !== null && _c !== void 0 ? _c : \"application/json\" }), (hasContent &&\n        requestContentType && {\n        \"content-type\": requestContentType,\n    })));\n    return createPipelineRequest({\n        url,\n        method,\n        body,\n        formData,\n        headers,\n        allowInsecureConnection: options.allowInsecureConnection,\n        tracingOptions: options.tracingOptions,\n        abortSignal: options.abortSignal,\n        onUploadProgress: options.onUploadProgress,\n        onDownloadProgress: options.onDownloadProgress,\n        timeout: options.timeout,\n        enableBrowserStreams: true,\n        streamResponseStatusCodes: options.responseAsStream\n            ? new Set([Number.POSITIVE_INFINITY])\n            : undefined,\n    });\n}\n/**\n * Prepares the body before sending the request\n */\nfunction getRequestBody(body, contentType = \"\") {\n    if (body === undefined) {\n        return { body: undefined };\n    }\n    if (isReadableStream(body)) {\n        return { body };\n    }\n    const firstType = contentType.split(\";\")[0];\n    if (firstType === \"application/json\") {\n        return { body: JSON.stringify(body) };\n    }\n    if (ArrayBuffer.isView(body)) {\n        return { body: body instanceof Uint8Array ? body : JSON.stringify(body) };\n    }\n    switch (firstType) {\n        case \"multipart/form-data\":\n            return isRLCFormDataInput(body)\n                ? { formData: processFormData(body) }\n                : { body: JSON.stringify(body) };\n        case \"text/plain\":\n            return { body: String(body) };\n        default:\n            if (typeof body === \"string\") {\n                return { body };\n            }\n            return { body: JSON.stringify(body) };\n    }\n}\nfunction isRLCFormDataValue(value) {\n    return (typeof value === \"string\" ||\n        value instanceof Uint8Array ||\n        // We don't do `instanceof Blob` since we should also accept polyfills of e.g. File in Node.\n        typeof value.stream === \"function\");\n}\nfunction isRLCFormDataInput(body) {\n    return (body !== undefined &&\n        body instanceof Object &&\n        Object.values(body).every((value) => isRLCFormDataValue(value) || (Array.isArray(value) && value.every(isRLCFormDataValue))));\n}\nfunction processFormDataValue(value) {\n    return value instanceof Uint8Array ? createFile(value, \"blob\") : value;\n}\n/**\n * Checks if binary data is in Uint8Array format, if so wrap it in a Blob\n * to send over the wire\n */\nfunction processFormData(formData) {\n    const processedFormData = {};\n    for (const element in formData) {\n        const value = formData[element];\n        processedFormData[element] = Array.isArray(value)\n            ? value.map(processFormDataValue)\n            : processFormDataValue(value);\n    }\n    return processedFormData;\n}\n/**\n * Prepares the response body\n */\nfunction getResponseBody(response) {\n    var _a, _b;\n    // Set the default response type\n    const contentType = (_a = response.headers.get(\"content-type\")) !== null && _a !== void 0 ? _a : \"\";\n    const firstType = contentType.split(\";\")[0];\n    const bodyToParse = (_b = response.bodyAsText) !== null && _b !== void 0 ? _b : \"\";\n    if (firstType === \"text/plain\") {\n        return String(bodyToParse);\n    }\n    // Default to \"application/json\" and fallback to string;\n    try {\n        return bodyToParse ? JSON.parse(bodyToParse) : undefined;\n    }\n    catch (error) {\n        // If we were supposed to get a JSON object and failed to\n        // parse, throw a parse error\n        if (firstType === \"application/json\") {\n            throw createParseError(response, error);\n        }\n        // We are not sure how to handle the response so we return it as\n        // plain text.\n        return String(bodyToParse);\n    }\n}\nfunction createParseError(response, err) {\n    var _a;\n    const msg = `Error \"${err}\" occurred while parsing the response body - ${response.bodyAsText}.`;\n    const errCode = (_a = err.code) !== null && _a !== void 0 ? _a : RestError.PARSE_ERROR;\n    return new RestError(msg, {\n        code: errCode,\n        statusCode: response.status,\n        request: response.request,\n        response: response,\n    });\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Builds the request url, filling in query and path parameters\n * @param endpoint - base url which can be a template url\n * @param routePath - path to append to the endpoint\n * @param pathParameters - values of the path parameters\n * @param options - request parameters including query parameters\n * @returns a full url with path and query parameters\n */\nexport function buildRequestUrl(endpoint, routePath, pathParameters, options = {}) {\n    if (routePath.startsWith(\"https://\") || routePath.startsWith(\"http://\")) {\n        return routePath;\n    }\n    endpoint = buildBaseUrl(endpoint, options);\n    routePath = buildRoutePath(routePath, pathParameters, options);\n    const requestUrl = appendQueryParams(`${endpoint}/${routePath}`, options);\n    const url = new URL(requestUrl);\n    return (url\n        .toString()\n        // Remove double forward slashes\n        .replace(/([^:]\\/)\\/+/g, \"$1\"));\n}\nfunction appendQueryParams(url, options = {}) {\n    if (!options.queryParameters) {\n        return url;\n    }\n    let parsedUrl = new URL(url);\n    const queryParams = options.queryParameters;\n    for (const key of Object.keys(queryParams)) {\n        const param = queryParams[key];\n        if (param === undefined || param === null) {\n            continue;\n        }\n        if (!param.toString || typeof param.toString !== \"function\") {\n            throw new Error(`Query parameters must be able to be represented as string, ${key} can't`);\n        }\n        const value = param.toISOString !== undefined ? param.toISOString() : param.toString();\n        parsedUrl.searchParams.append(key, value);\n    }\n    if (options.skipUrlEncoding) {\n        parsedUrl = skipQueryParameterEncoding(parsedUrl);\n    }\n    return parsedUrl.toString();\n}\nfunction skipQueryParameterEncoding(url) {\n    if (!url) {\n        return url;\n    }\n    const searchPieces = [];\n    for (const [name, value] of url.searchParams) {\n        // QUIRK: searchParams.get retrieves the values decoded\n        searchPieces.push(`${name}=${value}`);\n    }\n    // QUIRK: we have to set search manually as searchParams will encode comma when it shouldn't.\n    url.search = searchPieces.length ? `?${searchPieces.join(\"&\")}` : \"\";\n    return url;\n}\nexport function buildBaseUrl(endpoint, options) {\n    var _a;\n    if (!options.pathParameters) {\n        return endpoint;\n    }\n    const pathParams = options.pathParameters;\n    for (const [key, param] of Object.entries(pathParams)) {\n        if (param === undefined || param === null) {\n            throw new Error(`Path parameters ${key} must not be undefined or null`);\n        }\n        if (!param.toString || typeof param.toString !== \"function\") {\n            throw new Error(`Path parameters must be able to be represented as string, ${key} can't`);\n        }\n        let value = param.toISOString !== undefined ? param.toISOString() : String(param);\n        if (!options.skipUrlEncoding) {\n            value = encodeURIComponent(param);\n        }\n        endpoint = (_a = replaceAll(endpoint, `{${key}}`, value)) !== null && _a !== void 0 ? _a : \"\";\n    }\n    return endpoint;\n}\nfunction buildRoutePath(routePath, pathParameters, options = {}) {\n    for (const pathParam of pathParameters) {\n        let value = pathParam;\n        if (!options.skipUrlEncoding) {\n            value = encodeURIComponent(pathParam);\n        }\n        routePath = routePath.replace(/\\{\\w+\\}/, value);\n    }\n    return routePath;\n}\n/**\n * Replace all of the instances of searchValue in value with the provided replaceValue.\n * @param value - The value to search and replace in.\n * @param searchValue - The value to search for in the value argument.\n * @param replaceValue - The value to replace searchValue with in the value argument.\n * @returns The value where each instance of searchValue was replaced with replacedValue.\n */\nexport function replaceAll(value, searchValue, replaceValue) {\n    return !value || !searchValue ? value : value.split(searchValue).join(replaceValue || \"\");\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { isTokenCredential } from \"@azure/core-auth\";\nimport { createDefaultPipeline } from \"./clientHelpers.js\";\nimport { sendRequest } from \"./sendRequest.js\";\nimport { buildRequestUrl } from \"./urlHelpers.js\";\nexport function getClient(endpoint, credentialsOrPipelineOptions, clientOptions = {}) {\n    var _a, _b;\n    let credentials;\n    if (credentialsOrPipelineOptions) {\n        if (isCredential(credentialsOrPipelineOptions)) {\n            credentials = credentialsOrPipelineOptions;\n        }\n        else {\n            clientOptions = credentialsOrPipelineOptions !== null && credentialsOrPipelineOptions !== void 0 ? credentialsOrPipelineOptions : {};\n        }\n    }\n    const pipeline = createDefaultPipeline(endpoint, credentials, clientOptions);\n    if ((_a = clientOptions.additionalPolicies) === null || _a === void 0 ? void 0 : _a.length) {\n        for (const { policy, position } of clientOptions.additionalPolicies) {\n            // Sign happens after Retry and is commonly needed to occur\n            // before policies that intercept post-retry.\n            const afterPhase = position === \"perRetry\" ? \"Sign\" : undefined;\n            pipeline.addPolicy(policy, {\n                afterPhase,\n            });\n        }\n    }\n    const { allowInsecureConnection, httpClient } = clientOptions;\n    const endpointUrl = (_b = clientOptions.endpoint) !== null && _b !== void 0 ? _b : endpoint;\n    const client = (path, ...args) => {\n        const getUrl = (requestOptions) => buildRequestUrl(endpointUrl, path, args, Object.assign({ allowInsecureConnection }, requestOptions));\n        return {\n            get: (requestOptions = {}) => {\n                return buildOperation(\"GET\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n            },\n            post: (requestOptions = {}) => {\n                return buildOperation(\"POST\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n            },\n            put: (requestOptions = {}) => {\n                return buildOperation(\"PUT\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n            },\n            patch: (requestOptions = {}) => {\n                return buildOperation(\"PATCH\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n            },\n            delete: (requestOptions = {}) => {\n                return buildOperation(\"DELETE\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n            },\n            head: (requestOptions = {}) => {\n                return buildOperation(\"HEAD\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n            },\n            options: (requestOptions = {}) => {\n                return buildOperation(\"OPTIONS\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n            },\n            trace: (requestOptions = {}) => {\n                return buildOperation(\"TRACE\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n            },\n        };\n    };\n    return {\n        path: client,\n        pathUnchecked: client,\n        pipeline,\n    };\n}\nfunction buildOperation(method, url, pipeline, options, allowInsecureConnection, httpClient) {\n    var _a;\n    allowInsecureConnection = (_a = options.allowInsecureConnection) !== null && _a !== void 0 ? _a : allowInsecureConnection;\n    return {\n        then: function (onFulfilled, onrejected) {\n            return sendRequest(method, url, pipeline, Object.assign(Object.assign({}, options), { allowInsecureConnection }), httpClient).then(onFulfilled, onrejected);\n        },\n        async asBrowserStream() {\n            return sendRequest(method, url, pipeline, Object.assign(Object.assign({}, options), { allowInsecureConnection, responseAsStream: true }), httpClient);\n        },\n        async asNodeStream() {\n            return sendRequest(method, url, pipeline, Object.assign(Object.assign({}, options), { allowInsecureConnection, responseAsStream: true }), httpClient);\n        },\n    };\n}\nfunction isCredential(param) {\n    if (param.key !== undefined || isTokenCredential(param)) {\n        return true;\n    }\n    return false;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { createClientLogger } from \"@azure/logger\";\nexport const logger = createClientLogger(\"openai\");\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { getClient } from \"@azure-rest/core-client\";\nimport { logger } from \"../logger.js\";\n/**\n * Initialize a new instance of `OpenAIContext`\n * @param endpoint - Supported Cognitive Services endpoints (protocol and hostname, for example:\n * https://westus.api.cognitive.microsoft.com).\n * @param credentials - uniquely identify client credential\n * @param options - the parameter for all optional parameters\n */\nexport default function createClient(endpoint, credentials, options = {}) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    const baseUrl = (_a = options.baseUrl) !== null && _a !== void 0 ? _a : `${endpoint}/openai`;\n    options.apiVersion = (_b = options.apiVersion) !== null && _b !== void 0 ? _b : \"2024-03-01-preview\";\n    const userAgentInfo = `azsdk-js-openai-rest/1.0.0-beta.12`;\n    const userAgentPrefix = options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${userAgentInfo}`\n        : `${userAgentInfo}`;\n    options = Object.assign(Object.assign({}, options), { userAgentOptions: {\n            userAgentPrefix,\n        }, loggingOptions: {\n            logger: (_d = (_c = options.loggingOptions) === null || _c === void 0 ? void 0 : _c.logger) !== null && _d !== void 0 ? _d : logger.info,\n        }, credentials: {\n            scopes: (_f = (_e = options.credentials) === null || _e === void 0 ? void 0 : _e.scopes) !== null && _f !== void 0 ? _f : [\"https://cognitiveservices.azure.com/.default\"],\n            apiKeyHeaderName: (_h = (_g = options.credentials) === null || _g === void 0 ? void 0 : _g.apiKeyHeaderName) !== null && _h !== void 0 ? _h : \"api-key\",\n        } });\n    const client = getClient(baseUrl, credentials, options);\n    return client;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nconst responseMap = {\n    \"POST /deployments/{deploymentId}/audio/transcriptions\": [\"200\"],\n    \"POST /deployments/{deploymentId}/audio/translations\": [\"200\"],\n    \"POST /deployments/{deploymentId}/completions\": [\"200\"],\n    \"POST /deployments/{deploymentId}/chat/completions\": [\"200\"],\n    \"POST /deployments/{deploymentId}/images/generations\": [\"200\"],\n    \"POST /deployments/{deploymentId}/embeddings\": [\"200\"],\n    \"GET /operations/images/{operationId}\": [\"200\"],\n    \"POST /images/generations:submit\": [\"202\"],\n    \"GET /images/generations:submit\": [\"200\", \"202\"],\n};\nexport function isUnexpected(response) {\n    const lroOriginal = response.headers[\"x-ms-original-url\"];\n    const url = new URL(lroOriginal !== null && lroOriginal !== void 0 ? lroOriginal : response.request.url);\n    const method = response.request.method;\n    let pathDetails = responseMap[`${method} ${url.pathname}`];\n    if (!pathDetails) {\n        pathDetails = getParametrizedPathSuccess(method, url.pathname);\n    }\n    return !pathDetails.includes(response.status);\n}\nfunction getParametrizedPathSuccess(method, path) {\n    var _a, _b, _c, _d;\n    const pathParts = path.split(\"/\");\n    // Traverse list to match the longest candidate\n    // matchedLen: the length of candidate path\n    // matchedValue: the matched status code array\n    let matchedLen = -1, matchedValue = [];\n    // Iterate the responseMap to find a match\n    for (const [key, value] of Object.entries(responseMap)) {\n        // Extracting the path from the map key which is in format\n        // GET /path/foo\n        if (!key.startsWith(method)) {\n            continue;\n        }\n        const candidatePath = getPathFromMapKey(key);\n        // Get each part of the url path\n        const candidateParts = candidatePath.split(\"/\");\n        // track if we have found a match to return the values found.\n        let found = true;\n        for (let i = candidateParts.length - 1, j = pathParts.length - 1; i >= 1 && j >= 1; i--, j--) {\n            if (((_a = candidateParts[i]) === null || _a === void 0 ? void 0 : _a.startsWith(\"{\")) && ((_b = candidateParts[i]) === null || _b === void 0 ? void 0 : _b.indexOf(\"}\")) !== -1) {\n                const start = candidateParts[i].indexOf(\"}\") + 1, end = (_c = candidateParts[i]) === null || _c === void 0 ? void 0 : _c.length;\n                // If the current part of the candidate is a \"template\" part\n                // Try to use the suffix of pattern to match the path\n                // {guid} ==> $\n                // {guid}:export ==> :export$\n                const isMatched = new RegExp(`${(_d = candidateParts[i]) === null || _d === void 0 ? void 0 : _d.slice(start, end)}`).test(pathParts[j] || \"\");\n                if (!isMatched) {\n                    found = false;\n                    break;\n                }\n                continue;\n            }\n            // If the candidate part is not a template and\n            // the parts don't match mark the candidate as not found\n            // to move on with the next candidate path.\n            if (candidateParts[i] !== pathParts[j]) {\n                found = false;\n                break;\n            }\n        }\n        // We finished evaluating the current candidate parts\n        // Update the matched value if and only if we found the longer pattern\n        if (found && candidatePath.length > matchedLen) {\n            matchedLen = candidatePath.length;\n            matchedValue = value;\n        }\n    }\n    return matchedValue;\n}\nfunction getPathFromMapKey(mapKey) {\n    const pathStart = mapKey.indexOf(\"/\");\n    return mapKey.slice(pathStart);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport OpenAIClient from \"./openAIClient.js\";\nexport * from \"./openAIClient.js\";\nexport * from \"./parameters.js\";\nexport * from \"./responses.js\";\nexport * from \"./clientDefinitions.js\";\nexport * from \"./isUnexpected.js\";\nexport * from \"./models.js\";\nexport * from \"./outputModels.js\";\nexport default OpenAIClient;\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport getClient from \"../rest/index.js\";\nexport function createOpenAI(endpoint, credential, options = {}) {\n    const clientContext = getClient(endpoint, credential, options);\n    return clientContext;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nexport function wrapError(f, message) {\n    try {\n        const result = f();\n        return result;\n    }\n    catch (cause) {\n        throw new Error(`${message}: ${cause}`, { cause });\n    }\n}\nexport function camelCaseKeys(obj) {\n    if (typeof obj !== \"object\" || !obj)\n        return obj;\n    if (Array.isArray(obj)) {\n        return obj.map((v) => camelCaseKeys(v));\n    }\n    else {\n        for (const key of Object.keys(obj)) {\n            const value = obj[key];\n            const newKey = tocamelCase(key);\n            if (newKey !== key) {\n                delete obj[key];\n            }\n            obj[newKey] =\n                typeof obj[newKey] === \"object\" ? camelCaseKeys(value) : value;\n        }\n        return obj;\n    }\n}\nexport function snakeCaseKeys(obj) {\n    if (typeof obj !== \"object\" || !obj)\n        return obj;\n    if (Array.isArray(obj)) {\n        return obj.map((v) => snakeCaseKeys(v));\n    }\n    else {\n        for (const key of Object.keys(obj)) {\n            const value = obj[key];\n            const newKey = toSnakeCase(key);\n            if (newKey !== key) {\n                delete obj[key];\n            }\n            obj[newKey] =\n                typeof obj[newKey] === \"object\" ? snakeCaseKeys(value) : value;\n        }\n        return obj;\n    }\n}\nfunction tocamelCase(str) {\n    return str\n        .toLowerCase()\n        .replace(/([_][a-z])/g, (group) => group.toUpperCase().replace(\"_\", \"\"));\n}\nfunction toSnakeCase(str) {\n    return str\n        .replace(/([A-Z])/g, (group) => `_${group.toLowerCase()}`)\n        .replace(/^_/, \"\");\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { __rest } from \"tslib\";\nimport { snakeCaseKeys } from \"../api/util.js\";\n/** serialize function for ChatRequestUserMessage */\nfunction serializeChatRequestUserMessage(obj) {\n    return {\n        role: obj[\"role\"],\n        content: typeof obj[\"content\"] === \"string\"\n            ? obj[\"content\"]\n            : obj[\"content\"].map(serializeChatRequestContentItemUnion),\n        name: obj[\"name\"],\n    };\n}\n/** serialize function for ChatMessageImageContentItem */\nfunction serializeChatRequestContentItemUnion(obj) {\n    switch (obj.type) {\n        case \"image_url\":\n            return serializeChatMessageImageContentItem(obj);\n        default:\n            return obj;\n    }\n}\n/** serialize function for ChatRequestAssistantMessage */\nfunction serializeChatRequestAssistantMessage(obj) {\n    if (obj.content === undefined) {\n        obj.content = null;\n    }\n    const { functionCall, toolCalls } = obj, rest = __rest(obj, [\"functionCall\", \"toolCalls\"]);\n    return Object.assign(Object.assign(Object.assign({}, snakeCaseKeys(rest)), (!toolCalls || toolCalls.length === 0 ? {} : { tool_calls: toolCalls })), (functionCall ? { function_call: functionCall } : {}));\n}\n/** serialize function for ChatRequestToolMessage */\nfunction serializeChatRequestToolMessage(obj) {\n    return {\n        role: obj[\"role\"],\n        content: obj[\"content\"],\n        tool_call_id: obj[\"toolCallId\"],\n    };\n}\n/** serialize function for ChatRequestMessageUnion */\nexport function serializeChatRequestMessageUnion(obj) {\n    switch (obj.role) {\n        case \"user\":\n            return serializeChatRequestUserMessage(obj);\n        case \"assistant\":\n            return serializeChatRequestAssistantMessage(obj);\n        case \"tool\":\n            return serializeChatRequestToolMessage(obj);\n        default:\n            return obj;\n    }\n}\n/** serialize function for ChatMessageImageContentItem */\nfunction serializeChatMessageImageContentItem(obj) {\n    return {\n        type: obj[\"type\"],\n        image_url: { url: obj.imageUrl[\"url\"], detail: obj.imageUrl[\"detail\"] },\n    };\n}\n/** serialize function for ChatMessageContentItemUnion */\nexport function serializeChatMessageContentItemUnion(obj) {\n    switch (obj.type) {\n        case \"image_url\":\n            return serializeChatMessageImageContentItem(obj);\n        default:\n            return obj;\n    }\n}\n/** serialize function for AzureSearchChatExtensionConfiguration */\nfunction serializeAzureSearchChatExtensionConfiguration(obj) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    return {\n        type: obj[\"type\"],\n        parameters: {\n            authentication: !obj.authentication\n                ? obj.authentication\n                : serializeOnYourDataAuthenticationOptionsUnion(obj.authentication),\n            top_n_documents: obj[\"topNDocuments\"],\n            in_scope: obj[\"inScope\"],\n            strictness: obj[\"strictness\"],\n            role_information: obj[\"roleInformation\"],\n            endpoint: obj[\"endpoint\"],\n            index_name: obj[\"indexName\"],\n            fields_mapping: !obj.fieldsMapping\n                ? undefined\n                : {\n                    title_field: (_a = obj.fieldsMapping) === null || _a === void 0 ? void 0 : _a[\"titleField\"],\n                    url_field: (_b = obj.fieldsMapping) === null || _b === void 0 ? void 0 : _b[\"urlField\"],\n                    filepath_field: (_c = obj.fieldsMapping) === null || _c === void 0 ? void 0 : _c[\"filepathField\"],\n                    content_fields: (_d = obj.fieldsMapping) === null || _d === void 0 ? void 0 : _d[\"contentFields\"],\n                    content_fields_separator: (_e = obj.fieldsMapping) === null || _e === void 0 ? void 0 : _e[\"contentFieldsSeparator\"],\n                    vector_fields: (_f = obj.fieldsMapping) === null || _f === void 0 ? void 0 : _f[\"vectorFields\"],\n                    image_vector_fields: (_g = obj.fieldsMapping) === null || _g === void 0 ? void 0 : _g[\"imageVectorFields\"],\n                },\n            query_type: obj[\"queryType\"],\n            semantic_configuration: obj[\"semanticConfiguration\"],\n            filter: obj[\"filter\"],\n            embedding_dependency: !obj.embeddingDependency\n                ? obj.embeddingDependency\n                : serializeOnYourDataVectorizationSourceUnion(obj.embeddingDependency),\n        },\n    };\n}\n/** serialize function for AzureMachineLearningIndexChatExtensionConfiguration */\nfunction serializeAzureMachineLearningIndexChatExtensionConfiguration(obj) {\n    return {\n        type: obj[\"type\"],\n        parameters: {\n            authentication: !obj.authentication\n                ? obj.authentication\n                : serializeOnYourDataAuthenticationOptionsUnion(obj.authentication),\n            top_n_documents: obj[\"topNDocuments\"],\n            in_scope: obj[\"inScope\"],\n            strictness: obj[\"strictness\"],\n            role_information: obj[\"roleInformation\"],\n            project_resource_id: obj[\"projectResourceId\"],\n            name: obj[\"name\"],\n            version: obj[\"version\"],\n            filter: obj[\"filter\"],\n        },\n    };\n}\n/** serialize function for AzureCosmosDBChatExtensionConfiguration */\nfunction serializeAzureCosmosDBChatExtensionConfiguration(obj) {\n    return {\n        type: obj[\"type\"],\n        parameters: {\n            authentication: !obj.authentication\n                ? obj.authentication\n                : serializeOnYourDataAuthenticationOptionsUnion(obj.authentication),\n            top_n_documents: obj[\"topNDocuments\"],\n            in_scope: obj[\"inScope\"],\n            strictness: obj[\"strictness\"],\n            role_information: obj[\"roleInformation\"],\n            database_name: obj[\"databaseName\"],\n            container_name: obj[\"containerName\"],\n            index_name: obj[\"indexName\"],\n            fields_mapping: {\n                title_field: obj.fieldsMapping[\"titleField\"],\n                url_field: obj.fieldsMapping[\"urlField\"],\n                filepath_field: obj.fieldsMapping[\"filepathField\"],\n                content_fields: obj.fieldsMapping[\"contentFields\"],\n                content_fields_separator: obj.fieldsMapping[\"contentFieldsSeparator\"],\n                vector_fields: obj.fieldsMapping[\"vectorFields\"],\n            },\n            embedding_dependency: serializeOnYourDataVectorizationSourceUnion(obj.embeddingDependency),\n        },\n    };\n}\n/** serialize function for ElasticsearchChatExtensionConfiguration */\nfunction serializeElasticsearchChatExtensionConfiguration(obj) {\n    var _a, _b, _c, _d, _e, _f;\n    return {\n        type: obj[\"type\"],\n        parameters: {\n            authentication: !obj.authentication\n                ? obj.authentication\n                : serializeOnYourDataAuthenticationOptionsUnion(obj.authentication),\n            top_n_documents: obj[\"topNDocuments\"],\n            in_scope: obj[\"inScope\"],\n            strictness: obj[\"strictness\"],\n            role_information: obj[\"roleInformation\"],\n            endpoint: obj[\"endpoint\"],\n            index_name: obj[\"indexName\"],\n            fields_mapping: !obj.fieldsMapping\n                ? undefined\n                : {\n                    title_field: (_a = obj.fieldsMapping) === null || _a === void 0 ? void 0 : _a[\"titleField\"],\n                    url_field: (_b = obj.fieldsMapping) === null || _b === void 0 ? void 0 : _b[\"urlField\"],\n                    filepath_field: (_c = obj.fieldsMapping) === null || _c === void 0 ? void 0 : _c[\"filepathField\"],\n                    content_fields: (_d = obj.fieldsMapping) === null || _d === void 0 ? void 0 : _d[\"contentFields\"],\n                    content_fields_separator: (_e = obj.fieldsMapping) === null || _e === void 0 ? void 0 : _e[\"contentFieldsSeparator\"],\n                    vector_fields: (_f = obj.fieldsMapping) === null || _f === void 0 ? void 0 : _f[\"vectorFields\"],\n                },\n            query_type: obj[\"queryType\"],\n            embedding_dependency: !obj.embeddingDependency\n                ? obj.embeddingDependency\n                : serializeOnYourDataVectorizationSourceUnion(obj.embeddingDependency),\n        },\n    };\n}\n/** serialize function for PineconeChatExtensionConfiguration */\nfunction serializePineconeChatExtensionConfiguration(obj) {\n    return {\n        type: obj[\"type\"],\n        parameters: {\n            authentication: !obj.authentication\n                ? obj.authentication\n                : serializeOnYourDataAuthenticationOptionsUnion(obj.authentication),\n            top_n_documents: obj[\"topNDocuments\"],\n            in_scope: obj[\"inScope\"],\n            strictness: obj[\"strictness\"],\n            role_information: obj[\"roleInformation\"],\n            environment: obj[\"environment\"],\n            index_name: obj[\"indexName\"],\n            fields_mapping: {\n                title_field: obj.fieldsMapping[\"titleField\"],\n                url_field: obj.fieldsMapping[\"urlField\"],\n                filepath_field: obj.fieldsMapping[\"filepathField\"],\n                content_fields: obj.fieldsMapping[\"contentFields\"],\n                content_fields_separator: obj.fieldsMapping[\"contentFieldsSeparator\"],\n            },\n            embedding_dependency: serializeOnYourDataVectorizationSourceUnion(obj.embeddingDependency),\n        },\n    };\n}\n/** serialize function for AzureChatExtensionConfigurationUnion */\nexport function serializeAzureChatExtensionConfigurationUnion(obj) {\n    switch (obj.type) {\n        case \"azure_search\":\n            return serializeAzureSearchChatExtensionConfiguration(obj);\n        case \"azure_ml_index\":\n            return serializeAzureMachineLearningIndexChatExtensionConfiguration(obj);\n        case \"azure_cosmos_db\":\n            return serializeAzureCosmosDBChatExtensionConfiguration(obj);\n        case \"elasticsearch\":\n            return serializeElasticsearchChatExtensionConfiguration(obj);\n        case \"pinecone\":\n            return serializePineconeChatExtensionConfiguration(obj);\n        default:\n            return obj;\n    }\n}\n/** serialize function for OnYourDataConnectionStringAuthenticationOptions */\nfunction serializeOnYourDataConnectionStringAuthenticationOptions(obj) {\n    return { type: obj[\"type\"], connection_string: obj[\"connectionString\"] };\n}\n/** serialize function for OnYourDataKeyAndKeyIdAuthenticationOptions */\nfunction serializeOnYourDataKeyAndKeyIdAuthenticationOptions(obj) {\n    return { type: obj[\"type\"], key: obj[\"key\"], key_id: obj[\"keyId\"] };\n}\n/** serialize function for OnYourDataEncodedApiKeyAuthenticationOptions */\nfunction serializeOnYourDataEncodedApiKeyAuthenticationOptions(obj) {\n    return { type: obj[\"type\"], encoded_api_key: obj[\"encodedApiKey\"] };\n}\n/** serialize function for OnYourDataAccessTokenAuthenticationOptions */\nfunction serializeOnYourDataAccessTokenAuthenticationOptions(obj) {\n    return { type: obj[\"type\"], access_token: obj[\"accessToken\"] };\n}\n/** serialize function for OnYourDataUserAssignedManagedIdentityAuthenticationOptions */\nfunction serializeOnYourDataUserAssignedManagedIdentityAuthenticationOptions(obj) {\n    return {\n        type: obj[\"type\"],\n        managed_identity_resource_id: obj[\"managedIdentityResourceId\"],\n    };\n}\n/** serialize function for OnYourDataAuthenticationOptionsUnion */\nexport function serializeOnYourDataAuthenticationOptionsUnion(obj) {\n    switch (obj.type) {\n        case \"connection_string\":\n            return serializeOnYourDataConnectionStringAuthenticationOptions(obj);\n        case \"key_and_key_id\":\n            return serializeOnYourDataKeyAndKeyIdAuthenticationOptions(obj);\n        case \"encoded_api_key\":\n            return serializeOnYourDataEncodedApiKeyAuthenticationOptions(obj);\n        case \"access_token\":\n            return serializeOnYourDataAccessTokenAuthenticationOptions(obj);\n        case \"user_assigned_managed_identity\":\n            return serializeOnYourDataUserAssignedManagedIdentityAuthenticationOptions(obj);\n        default:\n            return obj;\n    }\n}\n/** serialize function for OnYourDataEndpointVectorizationSource */\nfunction serializeOnYourDataEndpointVectorizationSource(obj) {\n    return {\n        type: obj[\"type\"],\n        endpoint: obj[\"endpoint\"],\n        authentication: serializeOnYourDataAuthenticationOptionsUnion(obj.authentication),\n    };\n}\n/** serialize function for OnYourDataDeploymentNameVectorizationSource */\nfunction serializeOnYourDataDeploymentNameVectorizationSource(obj) {\n    return { type: obj[\"type\"], deployment_name: obj[\"deploymentName\"] };\n}\n/** serialize function for OnYourDataModelIdVectorizationSource */\nfunction serializeOnYourDataModelIdVectorizationSource(obj) {\n    return { type: obj[\"type\"], model_id: obj[\"modelId\"] };\n}\n/** serialize function for OnYourDataVectorizationSourceUnion */\nexport function serializeOnYourDataVectorizationSourceUnion(obj) {\n    switch (obj.type) {\n        case \"endpoint\":\n            return serializeOnYourDataEndpointVectorizationSource(obj);\n        case \"deployment_name\":\n            return serializeOnYourDataDeploymentNameVectorizationSource(obj);\n        case \"model_id\":\n            return serializeOnYourDataModelIdVectorizationSource(obj);\n        default:\n            return obj;\n    }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { __asyncGenerator, __await } from \"tslib\";\nexport function polyfillStream(stream) {\n    makeAsyncIterable(stream);\n    return stream;\n}\nfunction makeAsyncIterable(webStream) {\n    if (!webStream[Symbol.asyncIterator]) {\n        webStream[Symbol.asyncIterator] = () => toAsyncIterable(webStream);\n    }\n    if (!webStream.values) {\n        webStream.values = () => toAsyncIterable(webStream);\n    }\n}\nfunction toAsyncIterable(stream) {\n    return __asyncGenerator(this, arguments, function* toAsyncIterable_1() {\n        const reader = stream.getReader();\n        try {\n            while (true) {\n                const { value, done } = yield __await(reader.read());\n                if (done) {\n                    return yield __await(void 0);\n                }\n                yield yield __await(value);\n            }\n        }\n        finally {\n            const cancelPromise = reader.cancel();\n            reader.releaseLock();\n            yield __await(cancelPromise);\n        }\n    });\n}\nexport async function streamToText(stream) {\n    const reader = stream.getReader();\n    const buffers = [];\n    let length = 0;\n    try {\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            const { value, done } = await reader.read();\n            if (done) {\n                return new TextDecoder().decode(concatBuffers(buffers, length));\n            }\n            length += value.length;\n            buffers.push(value);\n        }\n    }\n    finally {\n        reader.releaseLock();\n    }\n}\nfunction getBuffersLength(buffers) {\n    return buffers.reduce((acc, curr) => acc + curr.length, 0);\n}\nfunction concatBuffers(buffers, len) {\n    const length = len !== null && len !== void 0 ? len : getBuffersLength(buffers);\n    const res = new Uint8Array(length);\n    for (let i = 0, pos = 0; i < buffers.length; i++) {\n        const buffer = buffers[i];\n        res.set(buffer, pos);\n        pos += buffer.length;\n    }\n    return res;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { wrapError } from \"./util.js\";\nimport { streamToText } from \"./readableStreamUtils.js\";\nexport async function getStream(response) {\n    const { body, status } = await response.asBrowserStream();\n    if (status !== \"200\" && body !== undefined) {\n        const text = await streamToText(body);\n        throw wrapError(() => JSON.parse(text).error, \"Error parsing response body\");\n    }\n    if (!body)\n        throw new Error(\"No stream found in response. Did you enable the stream option?\");\n    return body;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { __asyncGenerator, __await } from \"tslib\";\nexport function createStream(asyncIter, cancel) {\n    const stream = iteratorToStream(asyncIter, cancel);\n    /** TODO: remove these polyfills once all supported runtimes support them */\n    return polyfillStream(stream, cancel);\n}\nfunction polyfillStream(stream, dispose) {\n    makeAsyncIterable(stream);\n    makeAsyncDisposable(stream, dispose);\n    return stream;\n}\nfunction makeAsyncDisposable(webStream, dispose) {\n    var _a;\n    (_a = Symbol.asyncDispose) !== null && _a !== void 0 ? _a : (Symbol.asyncDispose = Symbol(\"Symbol.asyncDispose\"));\n    if (!webStream[Symbol.asyncDispose]) {\n        webStream[Symbol.asyncDispose] = () => dispose();\n    }\n}\nfunction makeAsyncIterable(webStream) {\n    if (!webStream[Symbol.asyncIterator]) {\n        webStream[Symbol.asyncIterator] = () => toAsyncIterable(webStream);\n    }\n    if (!webStream.values) {\n        webStream.values = () => toAsyncIterable(webStream);\n    }\n}\nfunction iteratorToStream(iterator, cancel) {\n    return new ReadableStream({\n        async pull(controller) {\n            const { value, done } = await iterator.next();\n            if (done) {\n                controller.close();\n            }\n            else {\n                controller.enqueue(value);\n            }\n        },\n        cancel,\n    });\n}\nexport function ensureAsyncIterable(stream) {\n    if (isReadableStream(stream)) {\n        makeAsyncIterable(stream);\n        return {\n            cancel: () => stream.cancel(),\n            iterable: stream,\n        };\n    }\n    else {\n        return {\n            cancel: async () => {\n                stream.socket.end();\n            },\n            iterable: stream,\n        };\n    }\n}\nfunction isReadableStream(body) {\n    return Boolean(body &&\n        typeof body.getReader === \"function\" &&\n        typeof body.tee === \"function\");\n}\nfunction toAsyncIterable(stream) {\n    return __asyncGenerator(this, arguments, function* toAsyncIterable_1() {\n        const reader = stream.getReader();\n        try {\n            while (true) {\n                const { value, done } = yield __await(reader.read());\n                if (done) {\n                    return yield __await(void 0);\n                }\n                yield yield __await(value);\n            }\n        }\n        finally {\n            const cancelPromise = reader.cancel();\n            reader.releaseLock();\n            yield __await(cancelPromise);\n        }\n    });\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { __asyncGenerator, __asyncValues, __await } from \"tslib\";\nimport { createStream, ensureAsyncIterable } from \"./utils.js\";\nvar ControlChars;\n(function (ControlChars) {\n    ControlChars[ControlChars[\"NewLine\"] = 10] = \"NewLine\";\n    ControlChars[ControlChars[\"CarriageReturn\"] = 13] = \"CarriageReturn\";\n    ControlChars[ControlChars[\"Space\"] = 32] = \"Space\";\n    ControlChars[ControlChars[\"Colon\"] = 58] = \"Colon\";\n})(ControlChars || (ControlChars = {}));\nexport function createSseStream(chunkStream) {\n    const { cancel, iterable } = ensureAsyncIterable(chunkStream);\n    const asyncIter = toMessage(toLine(iterable));\n    return createStream(asyncIter, cancel);\n}\nfunction concatBuffer(a, b) {\n    const res = new Uint8Array(a.length + b.length);\n    res.set(a);\n    res.set(b, a.length);\n    return res;\n}\nfunction createMessage() {\n    return {\n        data: undefined,\n        event: \"\",\n        id: \"\",\n        retry: undefined,\n    };\n}\nfunction toLine(chunkIter) {\n    return __asyncGenerator(this, arguments, function* toLine_1() {\n        var _a, e_1, _b, _c;\n        let buf;\n        let bufIdx = 0;\n        let fieldLen = -1;\n        let discardTrailingNewline = false;\n        try {\n            for (var _d = true, chunkIter_1 = __asyncValues(chunkIter), chunkIter_1_1; chunkIter_1_1 = yield __await(chunkIter_1.next()), _a = chunkIter_1_1.done, !_a; _d = true) {\n                _c = chunkIter_1_1.value;\n                _d = false;\n                const chunk = _c;\n                if (buf === undefined) {\n                    buf = chunk;\n                    bufIdx = 0;\n                    fieldLen = -1;\n                }\n                else {\n                    buf = concatBuffer(buf, chunk);\n                }\n                const bufLen = buf.length;\n                let start = 0;\n                while (bufIdx < bufLen) {\n                    if (discardTrailingNewline) {\n                        if (buf[bufIdx] === ControlChars.NewLine) {\n                            start = ++bufIdx;\n                        }\n                        discardTrailingNewline = false;\n                    }\n                    let end = -1;\n                    for (; bufIdx < bufLen && end === -1; ++bufIdx) {\n                        switch (buf[bufIdx]) {\n                            case ControlChars.Colon:\n                                if (fieldLen === -1) {\n                                    fieldLen = bufIdx - start;\n                                }\n                                break;\n                            case ControlChars.CarriageReturn:\n                                // We need to discard the trailing newline if any but can't do\n                                // that now because we need to dispatch the current line first.\n                                discardTrailingNewline = true;\n                                end = bufIdx;\n                                break;\n                            case ControlChars.NewLine:\n                                end = bufIdx;\n                                break;\n                        }\n                    }\n                    if (end === -1) {\n                        // We reached the end of the buffer but the line hasn't ended.\n                        // Wait for the next chunk and then continue parsing:\n                        break;\n                    }\n                    yield yield __await({ line: buf.subarray(start, end), fieldLen });\n                    start = bufIdx; // we're now on the next line\n                    fieldLen = -1;\n                }\n                if (start === bufLen) {\n                    buf = undefined;\n                }\n                else if (start !== 0) {\n                    // discard already processed lines\n                    buf = buf.subarray(start);\n                    bufIdx -= start;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (!_d && !_a && (_b = chunkIter_1.return)) yield __await(_b.call(chunkIter_1));\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    });\n}\nfunction toMessage(lineIter) {\n    return __asyncGenerator(this, arguments, function* toMessage_1() {\n        var _a, e_2, _b, _c;\n        let message = createMessage();\n        const decoder = new TextDecoder();\n        try {\n            for (var _d = true, lineIter_1 = __asyncValues(lineIter), lineIter_1_1; lineIter_1_1 = yield __await(lineIter_1.next()), _a = lineIter_1_1.done, !_a; _d = true) {\n                _c = lineIter_1_1.value;\n                _d = false;\n                const { line, fieldLen } = _c;\n                if (line.length === 0 && message.data !== undefined) {\n                    // empty line denotes end of message. Yield and start a new message:\n                    yield yield __await(message);\n                    message = createMessage();\n                }\n                else if (fieldLen > 0) {\n                    // exclude comments and lines with no values\n                    // line is of format \"<field>:<value>\" or \"<field>: <value>\"\n                    // https://html.spec.whatwg.org/multipage/server-sent-events.html#event-stream-interpretation\n                    const field = decoder.decode(line.subarray(0, fieldLen));\n                    const valueOffset = fieldLen + (line[fieldLen + 1] === ControlChars.Space ? 2 : 1);\n                    const value = decoder.decode(line.subarray(valueOffset));\n                    switch (field) {\n                        case \"data\":\n                            message.data = message.data ? message.data + \"\\n\" + value : value;\n                            break;\n                        case \"event\":\n                            message.event = value;\n                            break;\n                        case \"id\":\n                            message.id = value;\n                            break;\n                        case \"retry\": {\n                            const retry = parseInt(value, 10);\n                            if (!isNaN(retry)) {\n                                message.retry = retry;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (!_d && !_a && (_b = lineIter_1.return)) yield __await(_b.call(lineIter_1));\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    });\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { getStream } from \"./getSSEs.js\";\nimport { wrapError } from \"./util.js\";\nimport { createSseStream } from \"@azure/core-sse\";\nimport { polyfillStream } from \"./readableStreamUtils.js\";\nexport async function getOaiSSEs(response, toEvent) {\n    const stringStream = await getStream(response);\n    const eventStream = createSseStream(stringStream);\n    const jsonParser = new TransformStream({\n        transform: async (chunk, controller) => {\n            if (chunk.data === \"[DONE]\") {\n                return;\n            }\n            controller.enqueue(toEvent(wrapError(() => JSON.parse(chunk.data), \"Error parsing an event. See 'cause' for more details\")));\n        },\n    });\n    /** TODO: remove these polyfills once all supported runtimes support them */\n    return polyfillStream(eventStream.pipeThrough(jsonParser));\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { __rest } from \"tslib\";\nimport { serializeChatRequestMessageUnion, serializeAzureChatExtensionConfigurationUnion, } from \"../utils/serializeUtil.js\";\nimport { isUnexpected, } from \"../rest/index.js\";\nimport { operationOptionsToRequestParameters, } from \"@azure-rest/core-client\";\nimport { getOaiSSEs } from \"./oaiSse.js\";\nimport { createFile } from \"@azure/core-rest-pipeline\";\nimport { snakeCaseKeys, camelCaseKeys } from \"./util.js\";\n// implementation\nexport async function getAudioTranscription(context, deploymentName, fileContent, formatOrOptions, inputOptions) {\n    const options = inputOptions !== null && inputOptions !== void 0 ? inputOptions : (typeof formatOrOptions === \"string\" ? {} : formatOrOptions !== null && formatOrOptions !== void 0 ? formatOrOptions : {});\n    const response_format = typeof formatOrOptions === \"string\" ? formatOrOptions : undefined;\n    const { abortSignal, onResponse, requestOptions, tracingOptions } = options, rest = __rest(options, [\"abortSignal\", \"onResponse\", \"requestOptions\", \"tracingOptions\"]);\n    const { body, status } = await context\n        .pathUnchecked(\"deployments/{deploymentName}/audio/transcriptions\", deploymentName)\n        .post(Object.assign(Object.assign({}, operationOptionsToRequestParameters({\n        abortSignal,\n        onResponse,\n        tracingOptions,\n        requestOptions,\n    })), { contentType: \"multipart/form-data\", body: Object.assign(Object.assign(Object.assign({}, snakeCaseKeys(rest)), { file: createFile(fileContent, \"placeholder.wav\") }), (response_format ? { response_format } : {})) }));\n    if (status !== \"200\") {\n        throw body.error;\n    }\n    return response_format !== \"verbose_json\"\n        ? body\n        : camelCaseKeys(body);\n}\n// implementation\nexport async function getAudioTranslation(context, deploymentName, fileContent, formatOrOptions, inputOptions) {\n    const options = inputOptions !== null && inputOptions !== void 0 ? inputOptions : (typeof formatOrOptions === \"string\" ? {} : formatOrOptions !== null && formatOrOptions !== void 0 ? formatOrOptions : {});\n    const response_format = typeof formatOrOptions === \"string\" ? formatOrOptions : undefined;\n    const { abortSignal, onResponse, requestOptions, tracingOptions } = options, rest = __rest(options, [\"abortSignal\", \"onResponse\", \"requestOptions\", \"tracingOptions\"]);\n    const { body, status } = await context\n        .pathUnchecked(\"deployments/{deploymentName}/audio/translations\", deploymentName)\n        .post(Object.assign(Object.assign({}, operationOptionsToRequestParameters({\n        abortSignal,\n        onResponse,\n        tracingOptions,\n        requestOptions,\n    })), { contentType: \"multipart/form-data\", body: Object.assign(Object.assign(Object.assign({}, snakeCaseKeys(rest)), { file: createFile(fileContent, \"placeholder.wav\") }), (response_format ? { response_format } : {})) }));\n    if (status !== \"200\") {\n        throw body.error;\n    }\n    return response_format !== \"verbose_json\"\n        ? body\n        : camelCaseKeys(body);\n}\nexport function _getCompletionsSend(context, deploymentId, body, options = { requestOptions: {} }) {\n    return context.path(\"/deployments/{deploymentId}/completions\", deploymentId).post(Object.assign(Object.assign({}, operationOptionsToRequestParameters(options)), { body: {\n            prompt: body[\"prompt\"],\n            max_tokens: body[\"maxTokens\"],\n            temperature: body[\"temperature\"],\n            top_p: body[\"topP\"],\n            logit_bias: body[\"logitBias\"],\n            user: body[\"user\"],\n            n: body[\"n\"],\n            logprobs: body[\"logprobs\"],\n            suffix: body[\"suffix\"],\n            echo: body[\"echo\"],\n            stop: body[\"stop\"],\n            presence_penalty: body[\"presencePenalty\"],\n            frequency_penalty: body[\"frequencyPenalty\"],\n            best_of: body[\"bestOf\"],\n            stream: body[\"stream\"],\n            model: body[\"model\"],\n        } }));\n}\nexport async function _getCompletionsDeserialize(result) {\n    if (isUnexpected(result)) {\n        throw result.body.error;\n    }\n    return getCompletionsResult(result.body);\n}\nexport function getCompletionsResult(body) {\n    const { created, choices, prompt_filter_results, prompt_annotations } = body, rest = __rest(body, [\"created\", \"choices\", \"prompt_filter_results\", \"prompt_annotations\"]);\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, camelCaseKeys(rest)), { created: new Date(created) }), {\n        promptFilterResults: getContentFilterResultsForPrompt({\n            prompt_filter_results,\n            prompt_annotations,\n        }),\n    }), { choices: choices.map((_a) => {\n            var { content_filter_results } = _a, choice = __rest(_a, [\"content_filter_results\"]);\n            return (Object.assign(Object.assign({}, camelCaseKeys(choice)), (!content_filter_results\n                ? {}\n                : {\n                    contentFilterResults: parseContentFilterResultsForChoiceOutput(content_filter_results),\n                })));\n        }) });\n}\n/**\n * Gets completions for the provided input prompts.\n * Completions support a wide variety of tasks and generate text that continues from or \"completes\"\n * provided prompt data.\n */\nexport async function getCompletions(context, deploymentId, body, options = { requestOptions: {} }) {\n    const result = await _getCompletionsSend(context, deploymentId, body, options);\n    return _getCompletionsDeserialize(result);\n}\nexport function streamCompletions(context, deploymentName, prompt, options = { requestOptions: {} }) {\n    const { abortSignal, onResponse, requestOptions, tracingOptions } = options, rest = __rest(options, [\"abortSignal\", \"onResponse\", \"requestOptions\", \"tracingOptions\"]);\n    const response = _getCompletionsSend(context, deploymentName, Object.assign(Object.assign({ prompt }, rest), { stream: true }), { abortSignal, onResponse, requestOptions, tracingOptions });\n    return getOaiSSEs(response, getCompletionsResult);\n}\nexport function _getChatCompletionsSend(context, deploymentId, body, options = { requestOptions: {} }) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    return context.path(\"/deployments/{deploymentId}/chat/completions\", deploymentId).post(Object.assign(Object.assign({}, operationOptionsToRequestParameters(options)), { body: {\n            model: body[\"model\"],\n            stream: body[\"stream\"],\n            max_tokens: body[\"maxTokens\"],\n            temperature: body[\"temperature\"],\n            top_p: body[\"topP\"],\n            logit_bias: body[\"logitBias\"],\n            user: body[\"user\"],\n            n: body[\"n\"],\n            stop: body[\"stop\"],\n            presence_penalty: body[\"presencePenalty\"],\n            frequency_penalty: body[\"frequencyPenalty\"],\n            data_sources: body[\"dataSources\"] === undefined\n                ? body[\"dataSources\"]\n                : body[\"dataSources\"].map((p) => serializeAzureChatExtensionConfigurationUnion(p)),\n            enhancements: !body.enhancements\n                ? undefined\n                : {\n                    grounding: !((_a = body.enhancements) === null || _a === void 0 ? void 0 : _a.grounding)\n                        ? undefined\n                        : { enabled: (_c = (_b = body.enhancements) === null || _b === void 0 ? void 0 : _b.grounding) === null || _c === void 0 ? void 0 : _c[\"enabled\"] },\n                    ocr: !((_d = body.enhancements) === null || _d === void 0 ? void 0 : _d.ocr)\n                        ? undefined\n                        : { enabled: (_f = (_e = body.enhancements) === null || _e === void 0 ? void 0 : _e.ocr) === null || _f === void 0 ? void 0 : _f[\"enabled\"] },\n                },\n            seed: body[\"seed\"],\n            logprobs: body[\"logprobs\"],\n            top_logprobs: body[\"topLogprobs\"],\n            response_format: !body.responseFormat ? undefined : { type: (_g = body.responseFormat) === null || _g === void 0 ? void 0 : _g[\"type\"] },\n            tool_choice: body[\"toolChoice\"],\n            tools: body[\"tools\"],\n            functions: body[\"functions\"] === undefined\n                ? body[\"functions\"]\n                : body[\"functions\"].map((p) => ({\n                    name: p[\"name\"],\n                    description: p[\"description\"],\n                    parameters: p[\"parameters\"],\n                })),\n            function_call: body[\"functionCall\"],\n            messages: body[\"messages\"].map((p) => serializeChatRequestMessageUnion(p)),\n        } }));\n}\nexport async function _getChatCompletionsDeserialize(result) {\n    if (isUnexpected(result)) {\n        throw result.body.error;\n    }\n    return getChatCompletionsResult(result.body);\n}\nexport function getChatCompletionsResult(body) {\n    const { created, choices, prompt_filter_results, prompt_annotations, usage } = body, rest = __rest(body, [\"created\", \"choices\", \"prompt_filter_results\", \"prompt_annotations\", \"usage\"]);\n    return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, camelCaseKeys(rest)), { created: new Date(created) }), {\n        promptFilterResults: getContentFilterResultsForPrompt({\n            prompt_filter_results,\n            prompt_annotations,\n        }),\n    }), (!usage\n        ? {}\n        : {\n            usage: {\n                completionTokens: usage[\"completion_tokens\"],\n                promptTokens: usage[\"prompt_tokens\"],\n                totalTokens: usage[\"total_tokens\"],\n            },\n        })), { choices: !choices\n            ? []\n            : choices.map((_a) => {\n                var { content_filter_results } = _a, choice = __rest(_a, [\"content_filter_results\"]);\n                return (Object.assign(Object.assign({}, camelCaseKeys(choice)), (!content_filter_results\n                    ? {}\n                    : {\n                        contentFilterResults: parseContentFilterResultsForChoiceOutput(content_filter_results),\n                    })));\n            }) });\n}\n/**\n * Gets chat completions for the provided chat messages.\n * Completions support a wide variety of tasks and generate text that continues from or \"completes\"\n * provided prompt data.\n */\nexport async function getChatCompletions(context, deploymentName, messages, options = { requestOptions: {} }) {\n    const result = await _getChatCompletionsSendX(context, deploymentName, messages, options);\n    return _getChatCompletionsDeserialize(result);\n}\nfunction _getChatCompletionsSendX(context, deploymentName, messages, options = { requestOptions: {} }) {\n    const { azureExtensionOptions, abortSignal, onResponse, requestOptions, tracingOptions } = options, rest = __rest(options, [\"azureExtensionOptions\", \"abortSignal\", \"onResponse\", \"requestOptions\", \"tracingOptions\"]);\n    const coreOptions = {\n        abortSignal,\n        onResponse,\n        requestOptions,\n        tracingOptions,\n    };\n    const azure = Object.assign(Object.assign({}, (!(azureExtensionOptions === null || azureExtensionOptions === void 0 ? void 0 : azureExtensionOptions.extensions)\n        ? {}\n        : { dataSources: azureExtensionOptions.extensions })), (!(azureExtensionOptions === null || azureExtensionOptions === void 0 ? void 0 : azureExtensionOptions.enhancements)\n        ? {}\n        : { enhancements: azureExtensionOptions.enhancements }));\n    return _getChatCompletionsSend(context, deploymentName, Object.assign(Object.assign({ messages }, rest), azure), coreOptions);\n}\nexport function streamChatCompletions(context, deploymentName, messages, options = { requestOptions: {} }) {\n    const response = _getChatCompletionsSendX(context, deploymentName, messages, Object.assign(Object.assign({}, options), { stream: true }));\n    return getOaiSSEs(response, getChatCompletionsResult);\n}\nexport function _getImageGenerationsSend(context, deploymentId, body, options = { requestOptions: {} }) {\n    return context.path(\"/deployments/{deploymentId}/images/generations\", deploymentId).post(Object.assign(Object.assign({}, operationOptionsToRequestParameters(options)), { body: {\n            model: body[\"model\"],\n            prompt: body[\"prompt\"],\n            n: body[\"n\"],\n            size: body[\"size\"],\n            response_format: body[\"responseFormat\"],\n            quality: body[\"quality\"],\n            style: body[\"style\"],\n            user: body[\"user\"],\n        } }));\n}\nexport async function _getImageGenerationsDeserialize(result) {\n    if (isUnexpected(result)) {\n        throw result.body.error;\n    }\n    return {\n        created: new Date(result.body[\"created\"]),\n        data: result.body[\"data\"].map((p) => {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25;\n            return ({\n                url: p[\"url\"],\n                base64Data: p[\"b64_json\"],\n                contentFilterResults: !p.content_filter_results\n                    ? undefined\n                    : {\n                        sexual: !((_a = p.content_filter_results) === null || _a === void 0 ? void 0 : _a.sexual)\n                            ? undefined\n                            : {\n                                severity: (_c = (_b = p.content_filter_results) === null || _b === void 0 ? void 0 : _b.sexual) === null || _c === void 0 ? void 0 : _c[\"severity\"],\n                                filtered: (_e = (_d = p.content_filter_results) === null || _d === void 0 ? void 0 : _d.sexual) === null || _e === void 0 ? void 0 : _e[\"filtered\"],\n                            },\n                        violence: !((_f = p.content_filter_results) === null || _f === void 0 ? void 0 : _f.violence)\n                            ? undefined\n                            : {\n                                severity: (_h = (_g = p.content_filter_results) === null || _g === void 0 ? void 0 : _g.violence) === null || _h === void 0 ? void 0 : _h[\"severity\"],\n                                filtered: (_k = (_j = p.content_filter_results) === null || _j === void 0 ? void 0 : _j.violence) === null || _k === void 0 ? void 0 : _k[\"filtered\"],\n                            },\n                        hate: !((_l = p.content_filter_results) === null || _l === void 0 ? void 0 : _l.hate)\n                            ? undefined\n                            : {\n                                severity: (_o = (_m = p.content_filter_results) === null || _m === void 0 ? void 0 : _m.hate) === null || _o === void 0 ? void 0 : _o[\"severity\"],\n                                filtered: (_q = (_p = p.content_filter_results) === null || _p === void 0 ? void 0 : _p.hate) === null || _q === void 0 ? void 0 : _q[\"filtered\"],\n                            },\n                        selfHarm: !((_r = p.content_filter_results) === null || _r === void 0 ? void 0 : _r.self_harm)\n                            ? undefined\n                            : {\n                                severity: (_t = (_s = p.content_filter_results) === null || _s === void 0 ? void 0 : _s.self_harm) === null || _t === void 0 ? void 0 : _t[\"severity\"],\n                                filtered: (_v = (_u = p.content_filter_results) === null || _u === void 0 ? void 0 : _u.self_harm) === null || _v === void 0 ? void 0 : _v[\"filtered\"],\n                            },\n                    },\n                revisedPrompt: p[\"revised_prompt\"],\n                promptFilterResults: !p.prompt_filter_results\n                    ? undefined\n                    : {\n                        sexual: !((_w = p.prompt_filter_results) === null || _w === void 0 ? void 0 : _w.sexual)\n                            ? undefined\n                            : {\n                                severity: (_y = (_x = p.prompt_filter_results) === null || _x === void 0 ? void 0 : _x.sexual) === null || _y === void 0 ? void 0 : _y[\"severity\"],\n                                filtered: (_0 = (_z = p.prompt_filter_results) === null || _z === void 0 ? void 0 : _z.sexual) === null || _0 === void 0 ? void 0 : _0[\"filtered\"],\n                            },\n                        violence: !((_1 = p.prompt_filter_results) === null || _1 === void 0 ? void 0 : _1.violence)\n                            ? undefined\n                            : {\n                                severity: (_3 = (_2 = p.prompt_filter_results) === null || _2 === void 0 ? void 0 : _2.violence) === null || _3 === void 0 ? void 0 : _3[\"severity\"],\n                                filtered: (_5 = (_4 = p.prompt_filter_results) === null || _4 === void 0 ? void 0 : _4.violence) === null || _5 === void 0 ? void 0 : _5[\"filtered\"],\n                            },\n                        hate: !((_6 = p.prompt_filter_results) === null || _6 === void 0 ? void 0 : _6.hate)\n                            ? undefined\n                            : {\n                                severity: (_8 = (_7 = p.prompt_filter_results) === null || _7 === void 0 ? void 0 : _7.hate) === null || _8 === void 0 ? void 0 : _8[\"severity\"],\n                                filtered: (_10 = (_9 = p.prompt_filter_results) === null || _9 === void 0 ? void 0 : _9.hate) === null || _10 === void 0 ? void 0 : _10[\"filtered\"],\n                            },\n                        selfHarm: !((_11 = p.prompt_filter_results) === null || _11 === void 0 ? void 0 : _11.self_harm)\n                            ? undefined\n                            : {\n                                severity: (_13 = (_12 = p.prompt_filter_results) === null || _12 === void 0 ? void 0 : _12.self_harm) === null || _13 === void 0 ? void 0 : _13[\"severity\"],\n                                filtered: (_15 = (_14 = p.prompt_filter_results) === null || _14 === void 0 ? void 0 : _14.self_harm) === null || _15 === void 0 ? void 0 : _15[\"filtered\"],\n                            },\n                        profanity: !((_16 = p.prompt_filter_results) === null || _16 === void 0 ? void 0 : _16.profanity)\n                            ? undefined\n                            : {\n                                filtered: (_18 = (_17 = p.prompt_filter_results) === null || _17 === void 0 ? void 0 : _17.profanity) === null || _18 === void 0 ? void 0 : _18[\"filtered\"],\n                                detected: (_20 = (_19 = p.prompt_filter_results) === null || _19 === void 0 ? void 0 : _19.profanity) === null || _20 === void 0 ? void 0 : _20[\"detected\"],\n                            },\n                        jailbreak: !((_21 = p.prompt_filter_results) === null || _21 === void 0 ? void 0 : _21.jailbreak)\n                            ? undefined\n                            : {\n                                filtered: (_23 = (_22 = p.prompt_filter_results) === null || _22 === void 0 ? void 0 : _22.jailbreak) === null || _23 === void 0 ? void 0 : _23[\"filtered\"],\n                                detected: (_25 = (_24 = p.prompt_filter_results) === null || _24 === void 0 ? void 0 : _24.jailbreak) === null || _25 === void 0 ? void 0 : _25[\"detected\"],\n                            },\n                    },\n            });\n        }),\n    };\n}\n/** Creates an image given a prompt. */\nexport async function getImageGenerations(context, deploymentId, body, options = { requestOptions: {} }) {\n    const result = await _getImageGenerationsSend(context, deploymentId, body, options);\n    return _getImageGenerationsDeserialize(result);\n}\nexport function _getEmbeddingsSend(context, deploymentId, body, options = { requestOptions: {} }) {\n    return context.path(\"/deployments/{deploymentId}/embeddings\", deploymentId).post(Object.assign(Object.assign({}, operationOptionsToRequestParameters(options)), { body: {\n            user: body[\"user\"],\n            model: body[\"model\"],\n            input: body[\"input\"],\n            dimensions: body[\"dimensions\"],\n        } }));\n}\nexport async function _getEmbeddingsDeserialize(result) {\n    if (isUnexpected(result)) {\n        throw result.body.error;\n    }\n    return {\n        data: result.body[\"data\"].map((p) => ({\n            embedding: p[\"embedding\"],\n            index: p[\"index\"],\n        })),\n        usage: {\n            promptTokens: result.body.usage[\"prompt_tokens\"],\n            totalTokens: result.body.usage[\"total_tokens\"],\n        },\n    };\n}\n/** Return the embeddings for a given prompt. */\nexport async function getEmbeddings(context, deploymentId, body, options = { requestOptions: {} }) {\n    const result = await _getEmbeddingsSend(context, deploymentId, body, options);\n    return _getEmbeddingsDeserialize(result);\n}\nfunction getContentFilterResultsForPrompt({ prompt_annotations, prompt_filter_results, }) {\n    const res = prompt_filter_results !== null && prompt_filter_results !== void 0 ? prompt_filter_results : prompt_annotations;\n    return res === null || res === void 0 ? void 0 : res.map((_a) => {\n        var { content_filter_results } = _a, rest = __rest(_a, [\"content_filter_results\"]);\n        return (Object.assign(Object.assign({}, camelCaseKeys(rest)), { contentFilterResults: parseContentFilterResultDetailsForPromptOutput(content_filter_results) }));\n    });\n}\nfunction parseContentFilterResultDetailsForPromptOutput(_a = {}) {\n    var { error } = _a, rest = __rest(_a, [\"error\"]);\n    return error ? parseError(error) : camelCaseKeys(rest);\n}\nfunction parseError(error) {\n    var _a;\n    return {\n        error: Object.assign(Object.assign({}, error), { details: (_a = error[\"details\"]) !== null && _a !== void 0 ? _a : [] }),\n    };\n}\nfunction parseContentFilterResultsForChoiceOutput(_a = {}) {\n    var _b;\n    var { error } = _a, successResult = __rest(_a, [\"error\"]);\n    return error\n        ? {\n            error: Object.assign(Object.assign({}, error), { details: (_b = error[\"details\"]) !== null && _b !== void 0 ? _b : [] }),\n        }\n        : camelCaseKeys(successResult);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nexport function nonAzurePolicy() {\n    const policy = {\n        name: \"openAiEndpoint\",\n        sendRequest: (request, next) => {\n            const obj = new URL(request.url);\n            const parts = obj.pathname.split(\"/\");\n            switch (parts[parts.length - 1]) {\n                case \"completions\":\n                    if (parts[parts.length - 2] === \"chat\") {\n                        obj.pathname = `${parts[1]}/chat/completions`;\n                    }\n                    else {\n                        obj.pathname = `${parts[1]}/completions`;\n                    }\n                    break;\n                case \"embeddings\":\n                    obj.pathname = `${parts[1]}/embeddings`;\n                    break;\n                case \"generations\":\n                    if (parts[parts.length - 2] === \"images\") {\n                        obj.pathname = `${parts[1]}/images/generations`;\n                    }\n                    else {\n                        throw new Error(\"Unexpected path\");\n                    }\n                    break;\n                case \"transcriptions\":\n                    obj.pathname = `${parts[1]}/audio/transcriptions`;\n                    break;\n                case \"translations\":\n                    obj.pathname = `${parts[1]}/audio/translations`;\n                    break;\n            }\n            obj.searchParams.delete(\"api-version\");\n            request.url = obj.toString();\n            return next(request);\n        },\n    };\n    return policy;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { __rest } from \"tslib\";\nimport { isTokenCredential } from \"@azure/core-auth\";\nimport { createOpenAI } from \"./api/index.js\";\nimport { getCompletions, getChatCompletions, getImageGenerations, getEmbeddings, getAudioTranscription, getAudioTranslation, } from \"./api/operations.js\";\nimport { nonAzurePolicy } from \"./api/policies/nonAzure.js\";\nimport { streamChatCompletions, streamCompletions } from \"./api/operations.js\";\nfunction createOpenAIEndpoint(version) {\n    return `https://api.openai.com/v${version}`;\n}\nfunction isCred(cred) {\n    return isTokenCredential(cred) || cred.key !== undefined;\n}\n/**\n * A client for interacting with Azure OpenAI.\n *\n * The client needs the endpoint of an OpenAI resource and an authentication\n * method such as an API key or token. The API key and endpoint can be found in\n * the OpenAI resource page. They will be located in the resource's Keys and Endpoint page.\n *\n * ### Examples for authentication:\n *\n * #### API Key\n *\n * ```js\n * import { OpenAIClient } from \"@azure/openai\";\n * import { AzureKeyCredential } from \"@azure/core-auth\";\n *\n * const endpoint = \"<azure endpoint>\";\n * const credential = new AzureKeyCredential(\"<api key>\");\n *\n * const client = new OpenAIClient(endpoint, credential);\n * ```\n *\n * #### Azure Active Directory\n *\n * ```js\n * import { OpenAIClient } from \"@azure/openai\";\n * import { DefaultAzureCredential } from \"@azure/identity\";\n *\n * const endpoint = \"<azure endpoint>\";\n * const credential = new DefaultAzureCredential();\n *\n * const client = new OpenAIClient(endpoint, credential);\n * ```\n */\nexport class OpenAIClient {\n    constructor(endpointOrOpenAiKey, credOrOptions = {}, options = {}) {\n        var _a, _b;\n        this._isAzure = false;\n        let opts;\n        let endpoint;\n        let cred;\n        if (isCred(credOrOptions)) {\n            endpoint = endpointOrOpenAiKey;\n            cred = credOrOptions;\n            opts = options;\n            this._isAzure = true;\n        }\n        else {\n            endpoint = createOpenAIEndpoint(1);\n            cred = endpointOrOpenAiKey;\n            const { credentials } = credOrOptions, restOpts = __rest(credOrOptions, [\"credentials\"]);\n            opts = Object.assign({ credentials: {\n                    apiKeyHeaderName: (_a = credentials === null || credentials === void 0 ? void 0 : credentials.apiKeyHeaderName) !== null && _a !== void 0 ? _a : \"Authorization\",\n                    scopes: credentials === null || credentials === void 0 ? void 0 : credentials.scopes,\n                } }, restOpts);\n        }\n        this._client = createOpenAI(endpoint, cred, Object.assign(Object.assign({}, opts), (this._isAzure\n            ? {}\n            : {\n                additionalPolicies: [\n                    ...((_b = opts.additionalPolicies) !== null && _b !== void 0 ? _b : []),\n                    {\n                        position: \"perCall\",\n                        policy: nonAzurePolicy(),\n                    },\n                ],\n            })));\n    }\n    setModel(model, options) {\n        if (!this._isAzure) {\n            options.model = model;\n        }\n    }\n    // implementation\n    async getAudioTranslation(deploymentName, fileContent, formatOrOptions, inputOptions) {\n        const options = inputOptions !== null && inputOptions !== void 0 ? inputOptions : (typeof formatOrOptions === \"string\" ? {} : formatOrOptions !== null && formatOrOptions !== void 0 ? formatOrOptions : {});\n        const response_format = typeof formatOrOptions === \"string\" ? formatOrOptions : undefined;\n        this.setModel(deploymentName, options);\n        if (response_format === undefined) {\n            return getAudioTranslation(this._client, deploymentName, fileContent, options);\n        }\n        return getAudioTranslation(this._client, deploymentName, fileContent, response_format, options);\n    }\n    // implementation\n    async getAudioTranscription(deploymentName, fileContent, formatOrOptions, inputOptions) {\n        const options = inputOptions !== null && inputOptions !== void 0 ? inputOptions : (typeof formatOrOptions === \"string\" ? {} : formatOrOptions !== null && formatOrOptions !== void 0 ? formatOrOptions : {});\n        const response_format = typeof formatOrOptions === \"string\" ? formatOrOptions : undefined;\n        this.setModel(deploymentName, options);\n        if (response_format === undefined) {\n            return getAudioTranscription(this._client, deploymentName, fileContent, options);\n        }\n        return getAudioTranscription(this._client, deploymentName, fileContent, response_format, options);\n    }\n    /**\n     * Gets completions for the provided input prompts.\n     * Completions support a wide variety of tasks and generate text that continues from or \"completes\"\n     * provided prompt data.\n     */\n    getCompletions(deploymentName, prompt, options = { requestOptions: {} }) {\n        this.setModel(deploymentName, options);\n        const { abortSignal, onResponse, requestOptions, tracingOptions } = options, rest = __rest(options, [\"abortSignal\", \"onResponse\", \"requestOptions\", \"tracingOptions\"]);\n        return getCompletions(this._client, deploymentName, Object.assign({ prompt }, rest), { abortSignal, onResponse, requestOptions, tracingOptions });\n    }\n    /**\n     * Lists the completions tokens as they become available for a given prompt.\n     * @param deploymentName - The name of the model deployment (when using Azure OpenAI) or model name (when using non-Azure OpenAI) to use for this request.\n     * @param prompt - The prompt to use for this request.\n     * @param options - The completions options for this completions request.\n     * @returns An asynchronous iterable of completions tokens.\n     */\n    streamCompletions(deploymentName, prompt, options = {}) {\n        this.setModel(deploymentName, options);\n        return streamCompletions(this._client, deploymentName, prompt, options);\n    }\n    /**\n     * Gets chat completions for the provided chat messages.\n     * Completions support a wide variety of tasks and generate text that continues from or \"completes\"\n     * provided prompt data.\n     */\n    getChatCompletions(deploymentName, messages, options = { requestOptions: {} }) {\n        this.setModel(deploymentName, options);\n        return getChatCompletions(this._client, deploymentName, messages, options);\n    }\n    /**\n     * Lists the chat completions tokens as they become available for a chat context.\n     * @param deploymentName - The name of the model deployment (when using Azure OpenAI) or model name (when using non-Azure OpenAI) to use for this request.\n     * @param messages - The chat context messages to use for this request.\n     * @param options - The chat completions options for this chat completions request.\n     * @returns An asynchronous iterable of chat completions tokens.\n     */\n    streamChatCompletions(deploymentName, messages, options = { requestOptions: {} }) {\n        this.setModel(deploymentName, options);\n        return streamChatCompletions(this._client, deploymentName, messages, options);\n    }\n    /** Creates an image given a prompt. */\n    getImages(deploymentName, prompt, options = { requestOptions: {} }) {\n        this.setModel(deploymentName, options);\n        const { abortSignal, onResponse, requestOptions, tracingOptions } = options, rest = __rest(options, [\"abortSignal\", \"onResponse\", \"requestOptions\", \"tracingOptions\"]);\n        return getImageGenerations(this._client, deploymentName, Object.assign({ prompt }, rest), { abortSignal, onResponse, requestOptions, tracingOptions });\n    }\n    /** Return the embeddings for a given prompt. */\n    getEmbeddings(deploymentName, input, options = { requestOptions: {} }) {\n        this.setModel(deploymentName, options);\n        const { abortSignal, onResponse, requestOptions, tracingOptions } = options, rest = __rest(options, [\"abortSignal\", \"onResponse\", \"requestOptions\", \"tracingOptions\"]);\n        return getEmbeddings(this._client, deploymentName, Object.assign({ input }, rest), { abortSignal, onResponse, requestOptions, tracingOptions });\n    }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * The OpenAIKeyCredential class represents an OpenAI API key\n * and is used to authenticate into an OpenAI client for\n * an OpenAI endpoint.\n */\nexport class OpenAIKeyCredential {\n    /**\n     * Create an instance of an AzureKeyCredential for use\n     * with a service client.\n     *\n     * @param key - The initial value of the key to use in authentication\n     */\n    constructor(key) {\n        if (!key) {\n            throw new Error(\"key must be a non-empty string\");\n        }\n        this._key = createKey(key);\n    }\n    /**\n     * The value of the key to be used in authentication\n     */\n    get key() {\n        return this._key;\n    }\n    /**\n     * Change the value of the key.\n     *\n     * Updates will take effect upon the next request after\n     * updating the key value.\n     *\n     * @param newKey - The new key value to be used\n     */\n    update(newKey) {\n        this._key = createKey(newKey);\n    }\n}\nfunction createKey(key) {\n    return key.startsWith(\"Bearer \") ? key : `Bearer ${key}`;\n}\n"],
  "mappings": "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",
  "names": ["_a", "_a", "enabledNamespaces", "logger", "logger", "enabledNamespaces", "_a", "logger", "_a", "_b", "_c", "_a", "_b", "_c", "rawContent", "_a", "delay", "_a", "_b", "logger", "_a", "_b", "delay", "_a", "_a", "_a", "_a", "_b", "_a", "isBlob", "buildRequestBody", "_a", "_b", "_a", "_b", "_c", "_d", "_a", "delay", "_a", "logger", "_a", "_b", "_c", "_d", "isKeyCredential", "_a", "_b", "_c", "_d", "_a", "_b", "_c", "_a", "_a", "_b", "logger", "_a", "_b", "_c", "_d", "logger", "_a", "_b", "_c", "_d", "_a", "_b", "_c", "_d", "polyfillStream", "makeAsyncIterable", "_a", "toAsyncIterable", "isReadableStream", "ControlChars", "_a", "_b", "_c", "_d", "_a", "_b", "_c", "_d", "_a", "_b"]
}
